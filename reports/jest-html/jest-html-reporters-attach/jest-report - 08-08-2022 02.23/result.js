window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":1,"numPassedTests":2,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":2,"numTotalTests":5,"startTime":1659965018332,"success":false,"testResults":[{"leaks":false,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1659965020579,"runtime":1198,"slow":false,"start":1659965019381},"skipped":false,"testFilePath":"F:\\Projects\\ensek\\E2ETests\\test\\specs\\purchase-energy.spec.ts","testResults":[{"ancestorTitles":["purchase energy tests","when the user purchases 500 units of electric"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"purchase energy tests when the user purchases 500 units of electric reduces the available electric by 500 units","location":null,"numPassingAsserts":0,"status":"passed","title":"reduces the available electric by 500 units"},{"ancestorTitles":["purchase energy tests","when the user purchases 500 units of electric"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"purchase energy tests when the user purchases 500 units of electric registers a new order has been created","location":null,"numPassingAsserts":0,"status":"passed","title":"registers a new order has been created"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnsekApiTestAppActions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst supertest_1 = tslib_1.__importDefault(require(\"supertest\"));\nconst luxon_1 = require(\"luxon\");\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\nclass EnsekApiTestAppActions {\n    static async buyEnergy(energyId, quantity) {\n        const response = await (0, supertest_1.default)(baseUrl).put(`/buy/${energyId}/${quantity}`)\n            .expect(200);\n        //need body?\n    }\n    ;\n    static async checkEnergy(electricUnits = 4322, gasUnits = 3000, nuclearUnits = 0, oilUnits = 20) {\n        const response = await (0, supertest_1.default)(baseUrl).get('/energy');\n        expect(JSON.stringify(response.body)).toEqual((`{\"electric\":{\"energy_id\":3,\"price_per_unit\":0.47,\"quantity_of_units\":${electricUnits},\"unit_type\":\"kWh\"},\"gas\":{\"energy_id\":1,\"price_per_unit\":0.34,\"quantity_of_units\":${gasUnits},\"unit_type\":\"m³\"},\"nuclear\":{\"energy_id\":2,\"price_per_unit\":0.56,\"quantity_of_units\":${nuclearUnits},\"unit_type\":\"MW\"},\"oil\":{\"energy_id\":4,\"price_per_unit\":0.5,\"quantity_of_units\":${oilUnits},\"unit_type\":\"Litres\"}}`));\n    }\n    ;\n    static async login(username, password, expectedResponse) {\n        return await (0, supertest_1.default)(baseUrl).post(`/login`)\n            .send(`{\"username\": \"${username}\",\"password\": \"${password}\"}`)\n            .expect(expectedResponse);\n    }\n    ;\n    static async checkOrders(energyType, unitsSold) {\n        const now = luxon_1.DateTime;\n        const response = await (0, supertest_1.default)(baseUrl).get(`/orders`);\n        expect(JSON.stringify(response.body)).toContain(`{\"fuel\":\"${energyType}\",\"id\":31fc32da-bccb-44ab-9352-4f43fc44ed4b\",\"quantity\":${unitsSold},\"time\":\"${now.fromHTTP.toString()}\"}`);\n    }\n    ;\n    static async resetEnergyDataToDefault() {\n        return await (0, supertest_1.default)(baseUrl).post('/reset')\n            .send('')\n            .expect(200);\n    }\n    ;\n}\nexports.EnsekApiTestAppActions = EnsekApiTestAppActions;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRjpcXFByb2plY3RzXFxlbnNla1xcRTJFVGVzdHNcXHRlc3RcXG1ldGhvZHNcXGVuc2VrLWFwaS10ZXN0LWFwcC5hY3Rpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxrRUFBZ0M7QUFDaEMsaUNBQWlDO0FBRWpDLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBQTRCLEdBQUcsR0FBRyxDQUFDLENBQUMseUNBQXlDO0FBRXpGLE1BQU0sT0FBTyxHQUFHLGtEQUFrRCxDQUFDO0FBRW5FLE1BQWEsc0JBQXNCO0lBRS9CLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFFBQWdCLEVBQUUsUUFBZ0I7UUFDckQsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO2FBQzFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNiLFlBQVk7SUFDaEIsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxnQkFBd0IsSUFBSSxFQUFFLFdBQW1CLElBQUksRUFBRSxlQUF1QixDQUFDLEVBQUUsV0FBbUIsRUFBRTtRQUMzSCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsd0VBQXdFLGFBQWEsc0ZBQXNGLFFBQVEseUZBQXlGLFlBQVksb0ZBQW9GLFFBQVEseUJBQXlCLENBQUMsQ0FBQyxDQUFBO0lBQ2xjLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBZ0IsRUFBRSxRQUFnQixFQUFFLGdCQUF3QjtRQUMzRSxPQUFPLE1BQU0sSUFBQSxtQkFBTyxFQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7YUFDM0MsSUFBSSxDQUFDLGlCQUFpQixRQUFRLGtCQUFrQixRQUFRLElBQUksQ0FBQzthQUM3RCxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQUEsQ0FBQztJQUVGLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLFVBQWtCLEVBQUUsU0FBaUI7UUFDMUQsTUFBTSxHQUFHLEdBQUcsZ0JBQVEsQ0FBQztRQUVyQixNQUFNLFFBQVEsR0FBSSxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFlBQVksVUFBVSwyREFBMkQsU0FBUyxZQUFZLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZMLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyx3QkFBd0I7UUFDakMsT0FBTyxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO2FBQzNDLElBQUksQ0FBQyxFQUFFLENBQUM7YUFDUixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakIsQ0FBQztJQUFBLENBQUM7Q0FDTDtBQS9CRCx3REErQkMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiRjpcXFByb2plY3RzXFxlbnNla1xcRTJFVGVzdHNcXHRlc3RcXG1ldGhvZHNcXGVuc2VrLWFwaS10ZXN0LWFwcC5hY3Rpb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZXF1ZXN0IGZyb20gXCJzdXBlcnRlc3RcIjtcclxuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tIFwibHV4b25cIjtcclxuXHJcbnByb2Nlc3MuZW52Lk5PREVfVExTX1JFSkVDVF9VTkFVVEhPUklaRUQgPSAnMCc7IC8vIHRoaXMgaXMgdG8gYnlwYXNzIGNlcnRpZmljYXRpb24gZXJyb3JzXHJcblxyXG5jb25zdCBiYXNlVXJsID0gJ2h0dHBzOi8vZW5zZWthcGljYW5kaWRhdGV0ZXN0LmF6dXJld2Vic2l0ZXMubmV0Lyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRW5zZWtBcGlUZXN0QXBwQWN0aW9ucyB7XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGJ1eUVuZXJneShlbmVyZ3lJZDogbnVtYmVyLCBxdWFudGl0eTogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLnB1dChgL2J1eS8ke2VuZXJneUlkfS8ke3F1YW50aXR5fWApXHJcbiAgICAgICAgLmV4cGVjdCgyMDApO1xyXG4gICAgICAgIC8vbmVlZCBib2R5P1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgc3RhdGljIGFzeW5jIGNoZWNrRW5lcmd5KGVsZWN0cmljVW5pdHM6IG51bWJlciA9IDQzMjIsIGdhc1VuaXRzOiBudW1iZXIgPSAzMDAwLCBudWNsZWFyVW5pdHM6IG51bWJlciA9IDAsIG9pbFVuaXRzOiBudW1iZXIgPSAyMCkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5nZXQoJy9lbmVyZ3knKTtcclxuICAgICAgICBleHBlY3QoSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuYm9keSkpLnRvRXF1YWwoKGB7XCJlbGVjdHJpY1wiOntcImVuZXJneV9pZFwiOjMsXCJwcmljZV9wZXJfdW5pdFwiOjAuNDcsXCJxdWFudGl0eV9vZl91bml0c1wiOiR7ZWxlY3RyaWNVbml0c30sXCJ1bml0X3R5cGVcIjpcImtXaFwifSxcImdhc1wiOntcImVuZXJneV9pZFwiOjEsXCJwcmljZV9wZXJfdW5pdFwiOjAuMzQsXCJxdWFudGl0eV9vZl91bml0c1wiOiR7Z2FzVW5pdHN9LFwidW5pdF90eXBlXCI6XCJtwrNcIn0sXCJudWNsZWFyXCI6e1wiZW5lcmd5X2lkXCI6MixcInByaWNlX3Blcl91bml0XCI6MC41NixcInF1YW50aXR5X29mX3VuaXRzXCI6JHtudWNsZWFyVW5pdHN9LFwidW5pdF90eXBlXCI6XCJNV1wifSxcIm9pbFwiOntcImVuZXJneV9pZFwiOjQsXCJwcmljZV9wZXJfdW5pdFwiOjAuNSxcInF1YW50aXR5X29mX3VuaXRzXCI6JHtvaWxVbml0c30sXCJ1bml0X3R5cGVcIjpcIkxpdHJlc1wifX1gKSkgICAgICAgXHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBsb2dpbih1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nLCBleHBlY3RlZFJlc3BvbnNlOiBudW1iZXIpIHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5wb3N0KGAvbG9naW5gKVxyXG4gICAgICAgIC5zZW5kKGB7XCJ1c2VybmFtZVwiOiBcIiR7dXNlcm5hbWV9XCIsXCJwYXNzd29yZFwiOiBcIiR7cGFzc3dvcmR9XCJ9YClcclxuICAgICAgICAuZXhwZWN0KGV4cGVjdGVkUmVzcG9uc2UpO1xyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgY2hlY2tPcmRlcnMoZW5lcmd5VHlwZTogc3RyaW5nLCB1bml0c1NvbGQ6IG51bWJlcikge1xyXG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGVUaW1lO1xyXG5cclxuICAgICAgICBjb25zdCByZXNwb25zZSA9ICBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLmdldChgL29yZGVyc2ApO1xyXG4gICAgICAgIGV4cGVjdChKU09OLnN0cmluZ2lmeShyZXNwb25zZS5ib2R5KSkudG9Db250YWluKGB7XCJmdWVsXCI6XCIke2VuZXJneVR5cGV9XCIsXCJpZFwiOjMxZmMzMmRhLWJjY2ItNDRhYi05MzUyLTRmNDNmYzQ0ZWQ0YlwiLFwicXVhbnRpdHlcIjoke3VuaXRzU29sZH0sXCJ0aW1lXCI6XCIke25vdy5mcm9tSFRUUC50b1N0cmluZygpfVwifWApO1xyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgcmVzZXRFbmVyZ3lEYXRhVG9EZWZhdWx0KCkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLnBvc3QoJy9yZXNldCcpXHJcbiAgICAgICAgLnNlbmQoJycpXHJcbiAgICAgICAgLmV4cGVjdCgyMDApO1xyXG4gICAgfTtcclxufSJdLCJ2ZXJzaW9uIjozfQ==","originalCode":"import request from \"supertest\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\r\n\r\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\r\n\r\nexport class EnsekApiTestAppActions {\r\n\r\n    static async buyEnergy(energyId: number, quantity: number) {\r\n        const response = await request(baseUrl).put(`/buy/${energyId}/${quantity}`)\r\n        .expect(200);\r\n        //need body?\r\n    };\r\n    \r\n    static async checkEnergy(electricUnits: number = 4322, gasUnits: number = 3000, nuclearUnits: number = 0, oilUnits: number = 20) {\r\n        const response = await request(baseUrl).get('/energy');\r\n        expect(JSON.stringify(response.body)).toEqual((`{\"electric\":{\"energy_id\":3,\"price_per_unit\":0.47,\"quantity_of_units\":${electricUnits},\"unit_type\":\"kWh\"},\"gas\":{\"energy_id\":1,\"price_per_unit\":0.34,\"quantity_of_units\":${gasUnits},\"unit_type\":\"m³\"},\"nuclear\":{\"energy_id\":2,\"price_per_unit\":0.56,\"quantity_of_units\":${nuclearUnits},\"unit_type\":\"MW\"},\"oil\":{\"energy_id\":4,\"price_per_unit\":0.5,\"quantity_of_units\":${oilUnits},\"unit_type\":\"Litres\"}}`))       \r\n    };\r\n\r\n    static async login(username: string, password: string, expectedResponse: number) {\r\n        return await request(baseUrl).post(`/login`)\r\n        .send(`{\"username\": \"${username}\",\"password\": \"${password}\"}`)\r\n        .expect(expectedResponse);\r\n    };\r\n\r\n    static async checkOrders(energyType: string, unitsSold: number) {\r\n        const now = DateTime;\r\n\r\n        const response =  await request(baseUrl).get(`/orders`);\r\n        expect(JSON.stringify(response.body)).toContain(`{\"fuel\":\"${energyType}\",\"id\":31fc32da-bccb-44ab-9352-4f43fc44ed4b\",\"quantity\":${unitsSold},\"time\":\"${now.fromHTTP.toString()}\"}`);\r\n    };\r\n\r\n    static async resetEnergyDataToDefault() {\r\n        return await request(baseUrl).post('/reset')\r\n        .send('')\r\n        .expect(200);\r\n    };\r\n}","sourceMapPath":"C:/Users/Darren/AppData/Local/Temp/jest/jest-transform-cache-640cf45b7291600be04a7cde20907db4-d1d5bfaad8659acd06069518d3e76e6c/3e/ensekapitestappactions_3e54a0c797b752e0fa9f9b410976ea74.map","wrapperLength":89},"result":{"scriptId":"1811","url":"F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7384,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":7381,"count":1}],"isBlockCoverage":true},{"functionName":"buyEnergy","ranges":[{"startOffset":542,"endOffset":733,"count":1},{"startOffset":706,"endOffset":732,"count":0}],"isBlockCoverage":true},{"functionName":"checkEnergy","ranges":[{"startOffset":751,"endOffset":1385,"count":2},{"startOffset":923,"endOffset":1384,"count":0}],"isBlockCoverage":true},{"functionName":"login","ranges":[{"startOffset":1403,"endOffset":1644,"count":0}],"isBlockCoverage":false},{"functionName":"checkOrders","ranges":[{"startOffset":1662,"endOffset":2017,"count":1},{"startOffset":1823,"endOffset":2016,"count":0}],"isBlockCoverage":true},{"functionName":"resetEnergyDataToDefault","ranges":[{"startOffset":2035,"endOffset":2193,"count":1}],"isBlockCoverage":true}]}}]},{"leaks":false,"numFailingTests":3,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1659965022035,"runtime":2667,"slow":false,"start":1659965019368},"skipped":false,"testFilePath":"F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts","testResults":[{"ancestorTitles":["login tests","when the user logs in with valid test credentials"],"duration":530,"failureDetails":[{"actual":"","error":{},"expected":"","matcherName":"","message":"Error: expected 200 \"OK\", got 500 \"Internal Server Error\"","passed":false,"stack":"Error: expected 200 \"OK\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:24:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:8:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"}],"failureMessages":["Error: expected 200 \"OK\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:24:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:8:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"],"fullName":"login tests when the user logs in with valid test credentials successfully logs the user in","location":null,"numPassingAsserts":0,"status":"failed","title":"successfully logs the user in"},{"ancestorTitles":["login tests","when the user logs in with invalid credentials"],"duration":470,"failureDetails":[{"actual":"","error":{},"expected":"","matcherName":"","message":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"","passed":false,"stack":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:24:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:15:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"}],"failureMessages":["Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:24:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:15:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"],"fullName":"login tests when the user logs in with invalid credentials prevents the user from logging in","location":null,"numPassingAsserts":0,"status":"failed","title":"prevents the user from logging in"},{"ancestorTitles":["login tests","when the user logs in with blank credentials"],"duration":476,"failureDetails":[{"actual":"","error":{},"expected":"","matcherName":"","message":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"","passed":false,"stack":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:24:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:22:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"}],"failureMessages":["Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:24:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:22:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"],"fullName":"login tests when the user logs in with blank credentials prevents the user from logging in","location":null,"numPassingAsserts":0,"status":"failed","title":"prevents the user from logging in"}],"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mlogin tests › when the user logs in with valid test credentials › successfully logs the user in\u001b[39m\u001b[22m\n\n    expected 200 \"OK\", got 500 \"Internal Server Error\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mawait\u001b[39m request(baseUrl)\u001b[33m.\u001b[39mpost(\u001b[32m`/login`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m         \u001b[33m.\u001b[39msend(\u001b[32m`{\"username\": \"${username}\",\"password\": \"${password}\"}`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 24 |\u001b[39m         \u001b[33m.\u001b[39mexpect(expectedResponse)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m     \u001b[36mstatic\u001b[39m \u001b[36masync\u001b[39m checkOrders(energyType\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m unitsSold\u001b[33m:\u001b[39m number) {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.login (\u001b[22m\u001b[2mtest/methods/ensek-api-test-app.actions.ts\u001b[2m:24:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/specs/login.spec.ts\u001b[39m\u001b[0m\u001b[2m:8:42)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      ----\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertStatus (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:252:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:306:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertFunction (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:285:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.assert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:164:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat localAssert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:120:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:125:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.callback (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:924:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:1153:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat IncomingMessage.<anonymous> (\u001b[22m\u001b[2mnode_modules/superagent/src/node/parsers/json.js\u001b[2m:19:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mlogin tests › when the user logs in with invalid credentials › prevents the user from logging in\u001b[39m\u001b[22m\n\n    expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mawait\u001b[39m request(baseUrl)\u001b[33m.\u001b[39mpost(\u001b[32m`/login`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m         \u001b[33m.\u001b[39msend(\u001b[32m`{\"username\": \"${username}\",\"password\": \"${password}\"}`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 24 |\u001b[39m         \u001b[33m.\u001b[39mexpect(expectedResponse)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m     \u001b[36mstatic\u001b[39m \u001b[36masync\u001b[39m checkOrders(energyType\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m unitsSold\u001b[33m:\u001b[39m number) {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.login (\u001b[22m\u001b[2mtest/methods/ensek-api-test-app.actions.ts\u001b[2m:24:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/specs/login.spec.ts\u001b[39m\u001b[0m\u001b[2m:15:42)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      ----\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertStatus (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:252:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:306:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertFunction (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:285:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.assert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:164:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat localAssert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:120:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:125:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.callback (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:924:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:1153:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat IncomingMessage.<anonymous> (\u001b[22m\u001b[2mnode_modules/superagent/src/node/parsers/json.js\u001b[2m:19:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mlogin tests › when the user logs in with blank credentials › prevents the user from logging in\u001b[39m\u001b[22m\n\n    expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mawait\u001b[39m request(baseUrl)\u001b[33m.\u001b[39mpost(\u001b[32m`/login`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m         \u001b[33m.\u001b[39msend(\u001b[32m`{\"username\": \"${username}\",\"password\": \"${password}\"}`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 24 |\u001b[39m         \u001b[33m.\u001b[39mexpect(expectedResponse)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m     \u001b[36mstatic\u001b[39m \u001b[36masync\u001b[39m checkOrders(energyType\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m unitsSold\u001b[33m:\u001b[39m number) {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.login (\u001b[22m\u001b[2mtest/methods/ensek-api-test-app.actions.ts\u001b[2m:24:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/specs/login.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:42)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      ----\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertStatus (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:252:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:306:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertFunction (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:285:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.assert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:164:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat localAssert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:120:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:125:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.callback (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:924:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:1153:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat IncomingMessage.<anonymous> (\u001b[22m\u001b[2mnode_modules/superagent/src/node/parsers/json.js\u001b[2m:19:7)\u001b[22m\u001b[2m\u001b[22m\n","v8Coverage":[{"codeTransformResult":{"code":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnsekApiTestAppActions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst supertest_1 = tslib_1.__importDefault(require(\"supertest\"));\nconst luxon_1 = require(\"luxon\");\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\nclass EnsekApiTestAppActions {\n    static async buyEnergy(energyId, quantity) {\n        const response = await (0, supertest_1.default)(baseUrl).put(`/buy/${energyId}/${quantity}`)\n            .expect(200);\n        //need body?\n    }\n    ;\n    static async checkEnergy(electricUnits = 4322, gasUnits = 3000, nuclearUnits = 0, oilUnits = 20) {\n        const response = await (0, supertest_1.default)(baseUrl).get('/energy');\n        expect(JSON.stringify(response.body)).toEqual((`{\"electric\":{\"energy_id\":3,\"price_per_unit\":0.47,\"quantity_of_units\":${electricUnits},\"unit_type\":\"kWh\"},\"gas\":{\"energy_id\":1,\"price_per_unit\":0.34,\"quantity_of_units\":${gasUnits},\"unit_type\":\"m³\"},\"nuclear\":{\"energy_id\":2,\"price_per_unit\":0.56,\"quantity_of_units\":${nuclearUnits},\"unit_type\":\"MW\"},\"oil\":{\"energy_id\":4,\"price_per_unit\":0.5,\"quantity_of_units\":${oilUnits},\"unit_type\":\"Litres\"}}`));\n    }\n    ;\n    static async login(username, password, expectedResponse) {\n        return await (0, supertest_1.default)(baseUrl).post(`/login`)\n            .send(`{\"username\": \"${username}\",\"password\": \"${password}\"}`)\n            .expect(expectedResponse);\n    }\n    ;\n    static async checkOrders(energyType, unitsSold) {\n        const now = luxon_1.DateTime;\n        const response = await (0, supertest_1.default)(baseUrl).get(`/orders`);\n        expect(JSON.stringify(response.body)).toContain(`{\"fuel\":\"${energyType}\",\"id\":31fc32da-bccb-44ab-9352-4f43fc44ed4b\",\"quantity\":${unitsSold},\"time\":\"${now.fromHTTP.toString()}\"}`);\n    }\n    ;\n    static async resetEnergyDataToDefault() {\n        return await (0, supertest_1.default)(baseUrl).post('/reset')\n            .send('')\n            .expect(200);\n    }\n    ;\n}\nexports.EnsekApiTestAppActions = EnsekApiTestAppActions;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRjpcXFByb2plY3RzXFxlbnNla1xcRTJFVGVzdHNcXHRlc3RcXG1ldGhvZHNcXGVuc2VrLWFwaS10ZXN0LWFwcC5hY3Rpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxrRUFBZ0M7QUFDaEMsaUNBQWlDO0FBRWpDLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBQTRCLEdBQUcsR0FBRyxDQUFDLENBQUMseUNBQXlDO0FBRXpGLE1BQU0sT0FBTyxHQUFHLGtEQUFrRCxDQUFDO0FBRW5FLE1BQWEsc0JBQXNCO0lBRS9CLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFFBQWdCLEVBQUUsUUFBZ0I7UUFDckQsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO2FBQzFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNiLFlBQVk7SUFDaEIsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxnQkFBd0IsSUFBSSxFQUFFLFdBQW1CLElBQUksRUFBRSxlQUF1QixDQUFDLEVBQUUsV0FBbUIsRUFBRTtRQUMzSCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsd0VBQXdFLGFBQWEsc0ZBQXNGLFFBQVEseUZBQXlGLFlBQVksb0ZBQW9GLFFBQVEseUJBQXlCLENBQUMsQ0FBQyxDQUFBO0lBQ2xjLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBZ0IsRUFBRSxRQUFnQixFQUFFLGdCQUF3QjtRQUMzRSxPQUFPLE1BQU0sSUFBQSxtQkFBTyxFQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7YUFDM0MsSUFBSSxDQUFDLGlCQUFpQixRQUFRLGtCQUFrQixRQUFRLElBQUksQ0FBQzthQUM3RCxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBQUEsQ0FBQztJQUVGLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLFVBQWtCLEVBQUUsU0FBaUI7UUFDMUQsTUFBTSxHQUFHLEdBQUcsZ0JBQVEsQ0FBQztRQUVyQixNQUFNLFFBQVEsR0FBSSxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFlBQVksVUFBVSwyREFBMkQsU0FBUyxZQUFZLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZMLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyx3QkFBd0I7UUFDakMsT0FBTyxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO2FBQzNDLElBQUksQ0FBQyxFQUFFLENBQUM7YUFDUixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakIsQ0FBQztJQUFBLENBQUM7Q0FDTDtBQS9CRCx3REErQkMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiRjpcXFByb2plY3RzXFxlbnNla1xcRTJFVGVzdHNcXHRlc3RcXG1ldGhvZHNcXGVuc2VrLWFwaS10ZXN0LWFwcC5hY3Rpb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZXF1ZXN0IGZyb20gXCJzdXBlcnRlc3RcIjtcclxuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tIFwibHV4b25cIjtcclxuXHJcbnByb2Nlc3MuZW52Lk5PREVfVExTX1JFSkVDVF9VTkFVVEhPUklaRUQgPSAnMCc7IC8vIHRoaXMgaXMgdG8gYnlwYXNzIGNlcnRpZmljYXRpb24gZXJyb3JzXHJcblxyXG5jb25zdCBiYXNlVXJsID0gJ2h0dHBzOi8vZW5zZWthcGljYW5kaWRhdGV0ZXN0LmF6dXJld2Vic2l0ZXMubmV0Lyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRW5zZWtBcGlUZXN0QXBwQWN0aW9ucyB7XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGJ1eUVuZXJneShlbmVyZ3lJZDogbnVtYmVyLCBxdWFudGl0eTogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLnB1dChgL2J1eS8ke2VuZXJneUlkfS8ke3F1YW50aXR5fWApXHJcbiAgICAgICAgLmV4cGVjdCgyMDApO1xyXG4gICAgICAgIC8vbmVlZCBib2R5P1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgc3RhdGljIGFzeW5jIGNoZWNrRW5lcmd5KGVsZWN0cmljVW5pdHM6IG51bWJlciA9IDQzMjIsIGdhc1VuaXRzOiBudW1iZXIgPSAzMDAwLCBudWNsZWFyVW5pdHM6IG51bWJlciA9IDAsIG9pbFVuaXRzOiBudW1iZXIgPSAyMCkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5nZXQoJy9lbmVyZ3knKTtcclxuICAgICAgICBleHBlY3QoSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuYm9keSkpLnRvRXF1YWwoKGB7XCJlbGVjdHJpY1wiOntcImVuZXJneV9pZFwiOjMsXCJwcmljZV9wZXJfdW5pdFwiOjAuNDcsXCJxdWFudGl0eV9vZl91bml0c1wiOiR7ZWxlY3RyaWNVbml0c30sXCJ1bml0X3R5cGVcIjpcImtXaFwifSxcImdhc1wiOntcImVuZXJneV9pZFwiOjEsXCJwcmljZV9wZXJfdW5pdFwiOjAuMzQsXCJxdWFudGl0eV9vZl91bml0c1wiOiR7Z2FzVW5pdHN9LFwidW5pdF90eXBlXCI6XCJtwrNcIn0sXCJudWNsZWFyXCI6e1wiZW5lcmd5X2lkXCI6MixcInByaWNlX3Blcl91bml0XCI6MC41NixcInF1YW50aXR5X29mX3VuaXRzXCI6JHtudWNsZWFyVW5pdHN9LFwidW5pdF90eXBlXCI6XCJNV1wifSxcIm9pbFwiOntcImVuZXJneV9pZFwiOjQsXCJwcmljZV9wZXJfdW5pdFwiOjAuNSxcInF1YW50aXR5X29mX3VuaXRzXCI6JHtvaWxVbml0c30sXCJ1bml0X3R5cGVcIjpcIkxpdHJlc1wifX1gKSkgICAgICAgXHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBsb2dpbih1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nLCBleHBlY3RlZFJlc3BvbnNlOiBudW1iZXIpIHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5wb3N0KGAvbG9naW5gKVxyXG4gICAgICAgIC5zZW5kKGB7XCJ1c2VybmFtZVwiOiBcIiR7dXNlcm5hbWV9XCIsXCJwYXNzd29yZFwiOiBcIiR7cGFzc3dvcmR9XCJ9YClcclxuICAgICAgICAuZXhwZWN0KGV4cGVjdGVkUmVzcG9uc2UpO1xyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgY2hlY2tPcmRlcnMoZW5lcmd5VHlwZTogc3RyaW5nLCB1bml0c1NvbGQ6IG51bWJlcikge1xyXG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGVUaW1lO1xyXG5cclxuICAgICAgICBjb25zdCByZXNwb25zZSA9ICBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLmdldChgL29yZGVyc2ApO1xyXG4gICAgICAgIGV4cGVjdChKU09OLnN0cmluZ2lmeShyZXNwb25zZS5ib2R5KSkudG9Db250YWluKGB7XCJmdWVsXCI6XCIke2VuZXJneVR5cGV9XCIsXCJpZFwiOjMxZmMzMmRhLWJjY2ItNDRhYi05MzUyLTRmNDNmYzQ0ZWQ0YlwiLFwicXVhbnRpdHlcIjoke3VuaXRzU29sZH0sXCJ0aW1lXCI6XCIke25vdy5mcm9tSFRUUC50b1N0cmluZygpfVwifWApO1xyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgcmVzZXRFbmVyZ3lEYXRhVG9EZWZhdWx0KCkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLnBvc3QoJy9yZXNldCcpXHJcbiAgICAgICAgLnNlbmQoJycpXHJcbiAgICAgICAgLmV4cGVjdCgyMDApO1xyXG4gICAgfTtcclxufSJdLCJ2ZXJzaW9uIjozfQ==","originalCode":"import request from \"supertest\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\r\n\r\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\r\n\r\nexport class EnsekApiTestAppActions {\r\n\r\n    static async buyEnergy(energyId: number, quantity: number) {\r\n        const response = await request(baseUrl).put(`/buy/${energyId}/${quantity}`)\r\n        .expect(200);\r\n        //need body?\r\n    };\r\n    \r\n    static async checkEnergy(electricUnits: number = 4322, gasUnits: number = 3000, nuclearUnits: number = 0, oilUnits: number = 20) {\r\n        const response = await request(baseUrl).get('/energy');\r\n        expect(JSON.stringify(response.body)).toEqual((`{\"electric\":{\"energy_id\":3,\"price_per_unit\":0.47,\"quantity_of_units\":${electricUnits},\"unit_type\":\"kWh\"},\"gas\":{\"energy_id\":1,\"price_per_unit\":0.34,\"quantity_of_units\":${gasUnits},\"unit_type\":\"m³\"},\"nuclear\":{\"energy_id\":2,\"price_per_unit\":0.56,\"quantity_of_units\":${nuclearUnits},\"unit_type\":\"MW\"},\"oil\":{\"energy_id\":4,\"price_per_unit\":0.5,\"quantity_of_units\":${oilUnits},\"unit_type\":\"Litres\"}}`))       \r\n    };\r\n\r\n    static async login(username: string, password: string, expectedResponse: number) {\r\n        return await request(baseUrl).post(`/login`)\r\n        .send(`{\"username\": \"${username}\",\"password\": \"${password}\"}`)\r\n        .expect(expectedResponse);\r\n    };\r\n\r\n    static async checkOrders(energyType: string, unitsSold: number) {\r\n        const now = DateTime;\r\n\r\n        const response =  await request(baseUrl).get(`/orders`);\r\n        expect(JSON.stringify(response.body)).toContain(`{\"fuel\":\"${energyType}\",\"id\":31fc32da-bccb-44ab-9352-4f43fc44ed4b\",\"quantity\":${unitsSold},\"time\":\"${now.fromHTTP.toString()}\"}`);\r\n    };\r\n\r\n    static async resetEnergyDataToDefault() {\r\n        return await request(baseUrl).post('/reset')\r\n        .send('')\r\n        .expect(200);\r\n    };\r\n}","sourceMapPath":"C:/Users/Darren/AppData/Local/Temp/jest/jest-transform-cache-640cf45b7291600be04a7cde20907db4-d1d5bfaad8659acd06069518d3e76e6c/3e/ensekapitestappactions_3e54a0c797b752e0fa9f9b410976ea74.map","wrapperLength":89},"result":{"scriptId":"1811","url":"F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7384,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":7381,"count":1}],"isBlockCoverage":true},{"functionName":"buyEnergy","ranges":[{"startOffset":542,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"checkEnergy","ranges":[{"startOffset":751,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"login","ranges":[{"startOffset":1403,"endOffset":1644,"count":3}],"isBlockCoverage":true},{"functionName":"checkOrders","ranges":[{"startOffset":1662,"endOffset":2017,"count":0}],"isBlockCoverage":false},{"functionName":"resetEnergyDataToDefault","ranges":[{"startOffset":2035,"endOffset":2193,"count":0}],"isBlockCoverage":false}]}}]}],"wasInterrupted":false,"config":{"bail":0,"changedFilesWithAncestor":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"F:\\Projects\\ensek\\E2ETests\\reports\\coverage\\v8","coverageProvider":"v8","coverageReporters":["html-spa"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"passWithNoTests":true,"projects":[],"reporters":[["default",{}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-junit\\index.js",{"suiteName":"MICA 4 E2E Tests","outputDirectory":"reports/jest-junit","outputName":"Jest Results - 08-08-2022 02.23.xml","suiteNameTemplate":"{title}","classNameTemplate":"{classname}-{title}","titleTemplate":"{classname}-{title}","ancestorSeparator":" › ","includeShortConsoleOutput":true}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-html-reporter\\dist\\index.js",{"pageTitle":"MICA 4 E2E Test Report","includeFailureMsg":true,"includeConsoleLog":true,"outputPath":"reports/jest-basic/Basic Report - 08-08-2022 02.23.html"}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/jest-html","filename":"jest-report - 08-08-2022 02.23.html","pageTitle":"Test Report","expand":false,"customInfos":[{"title":"MICA 4"}],"includeConsoleLog":true}]],"rootDir":"F:\\Projects\\ensek\\E2ETests","runTestsByPath":false,"skipFilter":false,"testFailureExitCode":1,"testPathPattern":"","testSequencer":"F:\\Projects\\ensek\\E2ETests\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":50000,"updateSnapshot":"new","useStderr":false,"verbose":false,"watch":false,"watchAll":true,"watchman":true},"endTime":1659965022096,"_reporterOptions":{"publicPath":"reports/jest-html","filename":"jest-report - 08-08-2022 02.23.html","expand":false,"pageTitle":"Test Report","hideIcon":false,"customInfos":[{"title":"MICA 4"}],"testCommand":"npx jest","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","includeConsoleLog":true},"attachInfos":{}})