window.jest_html_reporters_callback__({"numFailedTestSuites":2,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":2,"numTotalTests":4,"startTime":1659957986479,"success":false,"testResults":[{"leaks":false,"numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1659957988642,"runtime":1195,"slow":false,"start":1659957987447},"skipped":false,"testFilePath":"F:\\Projects\\ensek\\E2ETests\\test\\specs\\purchase-energy.spec.ts","testResults":[{"ancestorTitles":["purchase energy tests","when "],"duration":0,"failureDetails":[{"actual":"","error":{},"expected":"","matcherName":"","message":"TypeError: ensek_api_test_app_actions_1.EnsekApiTestAppActions.getCurrentEnergySupply is not a function","passed":false,"stack":"TypeError: ensek_api_test_app_actions_1.EnsekApiTestAppActions.getCurrentEnergySupply is not a function\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\purchase-energy.spec.ts:6:32)\n    at Object.asyncJestLifecycle (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:58:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"}],"failureMessages":["TypeError: ensek_api_test_app_actions_1.EnsekApiTestAppActions.getCurrentEnergySupply is not a function\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\purchase-energy.spec.ts:6:32)\n    at Object.asyncJestLifecycle (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:58:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"purchase energy tests when  ","location":null,"numPassingAsserts":0,"status":"failed","title":""}],"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mpurchase energy tests › when  › \u001b[39m\u001b[22m\n\n    TypeError: ensek_api_test_app_actions_1.EnsekApiTestAppActions.getCurrentEnergySupply is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 5 |\u001b[39m     beforeAll(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m         \u001b[33mEnsekApiTestAppActions\u001b[39m\u001b[33m.\u001b[39mgetCurrentEnergySupply()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m   |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 7 |\u001b[39m     })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 8 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 9 |\u001b[39m     describe(\u001b[32m'when '\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/specs/purchase-energy.spec.ts\u001b[39m\u001b[0m\u001b[2m:6:32)\u001b[22m\u001b[2m\u001b[22m\n","v8Coverage":[{"codeTransformResult":{"code":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnsekApiTestAppActions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst supertest_1 = tslib_1.__importDefault(require(\"supertest\"));\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\nclass EnsekApiTestAppActions {\n    static async buyEnergy(energyId, quantity) {\n        const response = await (0, supertest_1.default)(baseUrl).put(`/buy/${energyId}/${quantity}`)\n            .expect(200);\n        //need body?\n    }\n    ;\n    static async checkDataInDefaultState() {\n        const response = await (0, supertest_1.default)(baseUrl).get('/energy');\n        expect(JSON.stringify(response.body)).toEqual((`{\r\n            \"electric\": {\r\n              \"energy_id\": 3,\r\n              \"price_per_unit\": 0.47,\r\n              \"quantity_of_units\": 4322,\r\n              \"unit_type\": \"kWh\"\r\n            },\r\n            \"gas\": {\r\n              \"energy_id\": 1,\r\n              \"price_per_unit\": 0.34,\r\n              \"quantity_of_units\": 3000,\r\n              \"unit_type\": \"m³\"\r\n            },\r\n            \"nuclear\": {\r\n              \"energy_id\": 2,\r\n              \"price_per_unit\": 0.56,\r\n              \"quantity_of_units\": 0,\r\n              \"unit_type\": \"MW\"\r\n            },\r\n            \"oil\": {\r\n              \"energy_id\": 4,\r\n              \"price_per_unit\": 0.5,\r\n              \"quantity_of_units\": 20,\r\n              \"unit_type\": \"Litres\"\r\n            }\r\n          }`));\n        // .expect(200);\n        // const startingAmount = response.body; \n        // // return startingAmount;\n        // console.log(startingAmount);\n        // //need body\n    }\n    ;\n    // static async checkDataInDefaultState() {\n    //     assert.strictEqual(this.getCurrentEnergySupply., `{\n    //         \"electric\": {\n    //           \"energy_id\": 3,\n    //           \"price_per_unit\": 0.47,\n    //           \"quantity_of_units\": 4322,\n    //           \"unit_type\": \"kWh\"\n    //         },\n    //         \"gas\": {\n    //           \"energy_id\": 1,\n    //           \"price_per_unit\": 0.34,\n    //           \"quantity_of_units\": 3000,\n    //           \"unit_type\": \"m³\"\n    //         },\n    //         \"nuclear\": {\n    //           \"energy_id\": 2,\n    //           \"price_per_unit\": 0.56,\n    //           \"quantity_of_units\": 0,\n    //           \"unit_type\": \"MW\"\n    //         },\n    //         \"oil\": {\n    //           \"energy_id\": 4,\n    //           \"price_per_unit\": 0.5,\n    //           \"quantity_of_units\": 20,\n    //           \"unit_type\": \"Litres\"\n    //         }\n    //       }`);\n    // }\n    static async login(username, password, expectedResponse) {\n        return await (0, supertest_1.default)(baseUrl).post(`/login`)\n            .send(`{\"username\": \"${username}\",\"password\": \"${password}\"}`)\n            .expect(expectedResponse);\n    }\n    ;\n    static async getOrders() {\n        return await (0, supertest_1.default)(baseUrl).get(`/orders`)\n            .expect(200);\n        //need body\n    }\n    ;\n    static async resetEnergyDataToDefault(apiUrl, postBody) {\n        return await (0, supertest_1.default)(baseUrl).post(apiUrl)\n            .send(postBody)\n            .expect(200);\n    }\n    ;\n}\nexports.EnsekApiTestAppActions = EnsekApiTestAppActions;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRjpcXFByb2plY3RzXFxlbnNla1xcRTJFVGVzdHNcXHRlc3RcXG1ldGhvZHNcXGVuc2VrLWFwaS10ZXN0LWFwcC5hY3Rpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFDQSxrRUFBZ0M7QUFFaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsR0FBRyxHQUFHLENBQUMsQ0FBQyx5Q0FBeUM7QUFFekYsTUFBTSxPQUFPLEdBQUcsa0RBQWtELENBQUM7QUFFbkUsTUFBYSxzQkFBc0I7SUFFL0IsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsUUFBZ0IsRUFBRSxRQUFnQjtRQUNyRCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxRQUFRLElBQUksUUFBUSxFQUFFLENBQUM7YUFDMUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsWUFBWTtJQUNoQixDQUFDO0lBQUEsQ0FBQztJQUVGLE1BQU0sQ0FBQyxLQUFLLENBQUMsdUJBQXVCO1FBQ2hDLE1BQU0sUUFBUSxHQUFHLE1BQU0sSUFBQSxtQkFBTyxFQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN2RCxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQXlCM0MsQ0FBQyxDQUFDLENBQUE7UUFDTixnQkFBZ0I7UUFDaEIseUNBQXlDO1FBQ3pDLDRCQUE0QjtRQUM1QiwrQkFBK0I7UUFDL0IsY0FBYztJQUNsQixDQUFDO0lBQUEsQ0FBQztJQUVGLDJDQUEyQztJQUMzQywwREFBMEQ7SUFDMUQsd0JBQXdCO0lBQ3hCLDRCQUE0QjtJQUM1QixvQ0FBb0M7SUFDcEMsdUNBQXVDO0lBQ3ZDLCtCQUErQjtJQUMvQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1QixvQ0FBb0M7SUFDcEMsdUNBQXVDO0lBQ3ZDLDhCQUE4QjtJQUM5QixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLDRCQUE0QjtJQUM1QixvQ0FBb0M7SUFDcEMsb0NBQW9DO0lBQ3BDLDhCQUE4QjtJQUM5QixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1QixtQ0FBbUM7SUFDbkMscUNBQXFDO0lBQ3JDLGtDQUFrQztJQUNsQyxZQUFZO0lBQ1osYUFBYTtJQUNiLElBQUk7SUFFSixNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFnQixFQUFFLFFBQWdCLEVBQUUsZ0JBQXdCO1FBQzNFLE9BQU8sTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQzthQUMzQyxJQUFJLENBQUMsaUJBQWlCLFFBQVEsa0JBQWtCLFFBQVEsSUFBSSxDQUFDO2FBQzdELE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTO1FBQ2xCLE9BQU8sTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQzthQUMzQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDYixXQUFXO0lBQ2YsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsS0FBSyxDQUFDLHdCQUF3QixDQUFDLE1BQWMsRUFBRSxRQUFhO1FBQy9ELE9BQU8sTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQzthQUN6QyxJQUFJLENBQUMsUUFBUSxDQUFDO2FBQ2QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFBQSxDQUFDO0NBQ0w7QUF6RkQsd0RBeUZDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkY6XFxQcm9qZWN0c1xcZW5zZWtcXEUyRVRlc3RzXFx0ZXN0XFxtZXRob2RzXFxlbnNlay1hcGktdGVzdC1hcHAuYWN0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gXCJhc3NlcnRcIjtcclxuaW1wb3J0IHJlcXVlc3QgZnJvbSBcInN1cGVydGVzdFwiO1xyXG5cclxucHJvY2Vzcy5lbnYuTk9ERV9UTFNfUkVKRUNUX1VOQVVUSE9SSVpFRCA9ICcwJzsgLy8gdGhpcyBpcyB0byBieXBhc3MgY2VydGlmaWNhdGlvbiBlcnJvcnNcclxuXHJcbmNvbnN0IGJhc2VVcmwgPSAnaHR0cHM6Ly9lbnNla2FwaWNhbmRpZGF0ZXRlc3QuYXp1cmV3ZWJzaXRlcy5uZXQvJztcclxuXHJcbmV4cG9ydCBjbGFzcyBFbnNla0FwaVRlc3RBcHBBY3Rpb25zIHtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYnV5RW5lcmd5KGVuZXJneUlkOiBudW1iZXIsIHF1YW50aXR5OiBudW1iZXIpIHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QoYmFzZVVybCkucHV0KGAvYnV5LyR7ZW5lcmd5SWR9LyR7cXVhbnRpdHl9YClcclxuICAgICAgICAuZXhwZWN0KDIwMCk7XHJcbiAgICAgICAgLy9uZWVkIGJvZHk/XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBzdGF0aWMgYXN5bmMgY2hlY2tEYXRhSW5EZWZhdWx0U3RhdGUoKSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLmdldCgnL2VuZXJneScpO1xyXG4gICAgICAgIGV4cGVjdChKU09OLnN0cmluZ2lmeShyZXNwb25zZS5ib2R5KSkudG9FcXVhbCgoYHtcclxuICAgICAgICAgICAgXCJlbGVjdHJpY1wiOiB7XHJcbiAgICAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogMyxcclxuICAgICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNDcsXHJcbiAgICAgICAgICAgICAgXCJxdWFudGl0eV9vZl91bml0c1wiOiA0MzIyLFxyXG4gICAgICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwia1doXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJnYXNcIjoge1xyXG4gICAgICAgICAgICAgIFwiZW5lcmd5X2lkXCI6IDEsXHJcbiAgICAgICAgICAgICAgXCJwcmljZV9wZXJfdW5pdFwiOiAwLjM0LFxyXG4gICAgICAgICAgICAgIFwicXVhbnRpdHlfb2ZfdW5pdHNcIjogMzAwMCxcclxuICAgICAgICAgICAgICBcInVuaXRfdHlwZVwiOiBcIm3Cs1wiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwibnVjbGVhclwiOiB7XHJcbiAgICAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogMixcclxuICAgICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNTYsXHJcbiAgICAgICAgICAgICAgXCJxdWFudGl0eV9vZl91bml0c1wiOiAwLFxyXG4gICAgICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwiTVdcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcIm9pbFwiOiB7XHJcbiAgICAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogNCxcclxuICAgICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNSxcclxuICAgICAgICAgICAgICBcInF1YW50aXR5X29mX3VuaXRzXCI6IDIwLFxyXG4gICAgICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwiTGl0cmVzXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfWApKSAgICAgICBcclxuICAgICAgICAvLyAuZXhwZWN0KDIwMCk7XHJcbiAgICAgICAgLy8gY29uc3Qgc3RhcnRpbmdBbW91bnQgPSByZXNwb25zZS5ib2R5OyBcclxuICAgICAgICAvLyAvLyByZXR1cm4gc3RhcnRpbmdBbW91bnQ7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coc3RhcnRpbmdBbW91bnQpO1xyXG4gICAgICAgIC8vIC8vbmVlZCBib2R5XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHN0YXRpYyBhc3luYyBjaGVja0RhdGFJbkRlZmF1bHRTdGF0ZSgpIHtcclxuICAgIC8vICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodGhpcy5nZXRDdXJyZW50RW5lcmd5U3VwcGx5LiwgYHtcclxuICAgIC8vICAgICAgICAgXCJlbGVjdHJpY1wiOiB7XHJcbiAgICAvLyAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogMyxcclxuICAgIC8vICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNDcsXHJcbiAgICAvLyAgICAgICAgICAgXCJxdWFudGl0eV9vZl91bml0c1wiOiA0MzIyLFxyXG4gICAgLy8gICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwia1doXCJcclxuICAgIC8vICAgICAgICAgfSxcclxuICAgIC8vICAgICAgICAgXCJnYXNcIjoge1xyXG4gICAgLy8gICAgICAgICAgIFwiZW5lcmd5X2lkXCI6IDEsXHJcbiAgICAvLyAgICAgICAgICAgXCJwcmljZV9wZXJfdW5pdFwiOiAwLjM0LFxyXG4gICAgLy8gICAgICAgICAgIFwicXVhbnRpdHlfb2ZfdW5pdHNcIjogMzAwMCxcclxuICAgIC8vICAgICAgICAgICBcInVuaXRfdHlwZVwiOiBcIm3Cs1wiXHJcbiAgICAvLyAgICAgICAgIH0sXHJcbiAgICAvLyAgICAgICAgIFwibnVjbGVhclwiOiB7XHJcbiAgICAvLyAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogMixcclxuICAgIC8vICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNTYsXHJcbiAgICAvLyAgICAgICAgICAgXCJxdWFudGl0eV9vZl91bml0c1wiOiAwLFxyXG4gICAgLy8gICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwiTVdcIlxyXG4gICAgLy8gICAgICAgICB9LFxyXG4gICAgLy8gICAgICAgICBcIm9pbFwiOiB7XHJcbiAgICAvLyAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogNCxcclxuICAgIC8vICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNSxcclxuICAgIC8vICAgICAgICAgICBcInF1YW50aXR5X29mX3VuaXRzXCI6IDIwLFxyXG4gICAgLy8gICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwiTGl0cmVzXCJcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgfWApO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBsb2dpbih1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nLCBleHBlY3RlZFJlc3BvbnNlOiBudW1iZXIpIHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5wb3N0KGAvbG9naW5gKVxyXG4gICAgICAgIC5zZW5kKGB7XCJ1c2VybmFtZVwiOiBcIiR7dXNlcm5hbWV9XCIsXCJwYXNzd29yZFwiOiBcIiR7cGFzc3dvcmR9XCJ9YClcclxuICAgICAgICAuZXhwZWN0KGV4cGVjdGVkUmVzcG9uc2UpO1xyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgZ2V0T3JkZXJzKCkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLmdldChgL29yZGVyc2ApXHJcbiAgICAgICAgLmV4cGVjdCgyMDApO1xyXG4gICAgICAgIC8vbmVlZCBib2R5XHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyByZXNldEVuZXJneURhdGFUb0RlZmF1bHQoYXBpVXJsOiBzdHJpbmcsIHBvc3RCb2R5OiBhbnkpIHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5wb3N0KGFwaVVybClcclxuICAgICAgICAuc2VuZChwb3N0Qm9keSlcclxuICAgICAgICAuZXhwZWN0KDIwMCk7XHJcbiAgICB9O1xyXG59Il0sInZlcnNpb24iOjN9","originalCode":"import assert from \"assert\";\r\nimport request from \"supertest\";\r\n\r\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\r\n\r\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\r\n\r\nexport class EnsekApiTestAppActions {\r\n\r\n    static async buyEnergy(energyId: number, quantity: number) {\r\n        const response = await request(baseUrl).put(`/buy/${energyId}/${quantity}`)\r\n        .expect(200);\r\n        //need body?\r\n    };\r\n    \r\n    static async checkDataInDefaultState() {\r\n        const response = await request(baseUrl).get('/energy');\r\n        expect(JSON.stringify(response.body)).toEqual((`{\r\n            \"electric\": {\r\n              \"energy_id\": 3,\r\n              \"price_per_unit\": 0.47,\r\n              \"quantity_of_units\": 4322,\r\n              \"unit_type\": \"kWh\"\r\n            },\r\n            \"gas\": {\r\n              \"energy_id\": 1,\r\n              \"price_per_unit\": 0.34,\r\n              \"quantity_of_units\": 3000,\r\n              \"unit_type\": \"m³\"\r\n            },\r\n            \"nuclear\": {\r\n              \"energy_id\": 2,\r\n              \"price_per_unit\": 0.56,\r\n              \"quantity_of_units\": 0,\r\n              \"unit_type\": \"MW\"\r\n            },\r\n            \"oil\": {\r\n              \"energy_id\": 4,\r\n              \"price_per_unit\": 0.5,\r\n              \"quantity_of_units\": 20,\r\n              \"unit_type\": \"Litres\"\r\n            }\r\n          }`))       \r\n        // .expect(200);\r\n        // const startingAmount = response.body; \r\n        // // return startingAmount;\r\n        // console.log(startingAmount);\r\n        // //need body\r\n    };\r\n\r\n    // static async checkDataInDefaultState() {\r\n    //     assert.strictEqual(this.getCurrentEnergySupply., `{\r\n    //         \"electric\": {\r\n    //           \"energy_id\": 3,\r\n    //           \"price_per_unit\": 0.47,\r\n    //           \"quantity_of_units\": 4322,\r\n    //           \"unit_type\": \"kWh\"\r\n    //         },\r\n    //         \"gas\": {\r\n    //           \"energy_id\": 1,\r\n    //           \"price_per_unit\": 0.34,\r\n    //           \"quantity_of_units\": 3000,\r\n    //           \"unit_type\": \"m³\"\r\n    //         },\r\n    //         \"nuclear\": {\r\n    //           \"energy_id\": 2,\r\n    //           \"price_per_unit\": 0.56,\r\n    //           \"quantity_of_units\": 0,\r\n    //           \"unit_type\": \"MW\"\r\n    //         },\r\n    //         \"oil\": {\r\n    //           \"energy_id\": 4,\r\n    //           \"price_per_unit\": 0.5,\r\n    //           \"quantity_of_units\": 20,\r\n    //           \"unit_type\": \"Litres\"\r\n    //         }\r\n    //       }`);\r\n    // }\r\n\r\n    static async login(username: string, password: string, expectedResponse: number) {\r\n        return await request(baseUrl).post(`/login`)\r\n        .send(`{\"username\": \"${username}\",\"password\": \"${password}\"}`)\r\n        .expect(expectedResponse);\r\n    };\r\n\r\n    static async getOrders() {\r\n        return await request(baseUrl).get(`/orders`)\r\n        .expect(200);\r\n        //need body\r\n    };\r\n\r\n    static async resetEnergyDataToDefault(apiUrl: string, postBody: any) {\r\n        return await request(baseUrl).post(apiUrl)\r\n        .send(postBody)\r\n        .expect(200);\r\n    };\r\n}","sourceMapPath":"C:/Users/Darren/AppData/Local/Temp/jest/jest-transform-cache-640cf45b7291600be04a7cde20907db4-d1d5bfaad8659acd06069518d3e76e6c/76/ensekapitestappactions_76d1e8ffcbb4fdc890ca18452c1e39b3.map","wrapperLength":89},"result":{"scriptId":"1811","url":"F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10560,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":10557,"count":1}],"isBlockCoverage":true},{"functionName":"buyEnergy","ranges":[{"startOffset":508,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"checkDataInDefaultState","ranges":[{"startOffset":717,"endOffset":1826,"count":1},{"startOffset":831,"endOffset":1825,"count":0}],"isBlockCoverage":true},{"functionName":"login","ranges":[{"startOffset":2769,"endOffset":3010,"count":0}],"isBlockCoverage":false},{"functionName":"getOrders","ranges":[{"startOffset":3028,"endOffset":3169,"count":0}],"isBlockCoverage":false},{"functionName":"resetEnergyDataToDefault","ranges":[{"startOffset":3187,"endOffset":3365,"count":0}],"isBlockCoverage":false}]}}]},{"leaks":false,"numFailingTests":3,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1659957990148,"runtime":2701,"slow":false,"start":1659957987447},"skipped":false,"testFilePath":"F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts","testResults":[{"ancestorTitles":["login tests","when the user logs in with valid test credentials"],"duration":515,"failureDetails":[{"actual":"","error":{},"expected":"","matcherName":"","message":"Error: expected 200 \"OK\", got 500 \"Internal Server Error\"","passed":false,"stack":"Error: expected 200 \"OK\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:83:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:8:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"}],"failureMessages":["Error: expected 200 \"OK\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:83:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:8:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"],"fullName":"login tests when the user logs in with valid test credentials successfully logs the user in","location":null,"numPassingAsserts":0,"status":"failed","title":"successfully logs the user in"},{"ancestorTitles":["login tests","when the user logs in with invalid credentials"],"duration":477,"failureDetails":[{"actual":"","error":{},"expected":"","matcherName":"","message":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"","passed":false,"stack":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:83:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:15:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"}],"failureMessages":["Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:83:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:15:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"],"fullName":"login tests when the user logs in with invalid credentials prevents the user from logging in","location":null,"numPassingAsserts":0,"status":"failed","title":"prevents the user from logging in"},{"ancestorTitles":["login tests","when the user logs in with blank credentials"],"duration":526,"failureDetails":[{"actual":"","error":{},"expected":"","matcherName":"","message":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"","passed":false,"stack":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:83:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:22:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"}],"failureMessages":["Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:83:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:22:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"],"fullName":"login tests when the user logs in with blank credentials prevents the user from logging in","location":null,"numPassingAsserts":0,"status":"failed","title":"prevents the user from logging in"}],"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mlogin tests › when the user logs in with valid test credentials › successfully logs the user in\u001b[39m\u001b[22m\n\n    expected 200 \"OK\", got 500 \"Internal Server Error\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mawait\u001b[39m request(baseUrl)\u001b[33m.\u001b[39mpost(\u001b[32m`/login`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 82 |\u001b[39m         \u001b[33m.\u001b[39msend(\u001b[32m`{\"username\": \"${username}\",\"password\": \"${password}\"}`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 83 |\u001b[39m         \u001b[33m.\u001b[39mexpect(expectedResponse)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 |\u001b[39m     \u001b[36mstatic\u001b[39m \u001b[36masync\u001b[39m getOrders() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.login (\u001b[22m\u001b[2mtest/methods/ensek-api-test-app.actions.ts\u001b[2m:83:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/specs/login.spec.ts\u001b[39m\u001b[0m\u001b[2m:8:42)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      ----\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertStatus (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:252:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:306:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertFunction (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:285:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.assert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:164:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat localAssert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:120:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:125:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.callback (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:924:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:1153:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat IncomingMessage.<anonymous> (\u001b[22m\u001b[2mnode_modules/superagent/src/node/parsers/json.js\u001b[2m:19:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mlogin tests › when the user logs in with invalid credentials › prevents the user from logging in\u001b[39m\u001b[22m\n\n    expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mawait\u001b[39m request(baseUrl)\u001b[33m.\u001b[39mpost(\u001b[32m`/login`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 82 |\u001b[39m         \u001b[33m.\u001b[39msend(\u001b[32m`{\"username\": \"${username}\",\"password\": \"${password}\"}`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 83 |\u001b[39m         \u001b[33m.\u001b[39mexpect(expectedResponse)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 |\u001b[39m     \u001b[36mstatic\u001b[39m \u001b[36masync\u001b[39m getOrders() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.login (\u001b[22m\u001b[2mtest/methods/ensek-api-test-app.actions.ts\u001b[2m:83:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/specs/login.spec.ts\u001b[39m\u001b[0m\u001b[2m:15:42)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      ----\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertStatus (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:252:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:306:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertFunction (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:285:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.assert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:164:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat localAssert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:120:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:125:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.callback (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:924:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:1153:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat IncomingMessage.<anonymous> (\u001b[22m\u001b[2mnode_modules/superagent/src/node/parsers/json.js\u001b[2m:19:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mlogin tests › when the user logs in with blank credentials › prevents the user from logging in\u001b[39m\u001b[22m\n\n    expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mawait\u001b[39m request(baseUrl)\u001b[33m.\u001b[39mpost(\u001b[32m`/login`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 82 |\u001b[39m         \u001b[33m.\u001b[39msend(\u001b[32m`{\"username\": \"${username}\",\"password\": \"${password}\"}`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 83 |\u001b[39m         \u001b[33m.\u001b[39mexpect(expectedResponse)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 |\u001b[39m     \u001b[36mstatic\u001b[39m \u001b[36masync\u001b[39m getOrders() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.login (\u001b[22m\u001b[2mtest/methods/ensek-api-test-app.actions.ts\u001b[2m:83:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/specs/login.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:42)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      ----\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertStatus (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:252:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:306:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertFunction (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:285:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.assert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:164:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat localAssert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:120:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:125:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.callback (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:924:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:1153:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat IncomingMessage.<anonymous> (\u001b[22m\u001b[2mnode_modules/superagent/src/node/parsers/json.js\u001b[2m:19:7)\u001b[22m\u001b[2m\u001b[22m\n","v8Coverage":[{"codeTransformResult":{"code":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnsekApiTestAppActions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst supertest_1 = tslib_1.__importDefault(require(\"supertest\"));\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\nclass EnsekApiTestAppActions {\n    static async buyEnergy(energyId, quantity) {\n        const response = await (0, supertest_1.default)(baseUrl).put(`/buy/${energyId}/${quantity}`)\n            .expect(200);\n        //need body?\n    }\n    ;\n    static async checkDataInDefaultState() {\n        const response = await (0, supertest_1.default)(baseUrl).get('/energy');\n        expect(JSON.stringify(response.body)).toEqual((`{\r\n            \"electric\": {\r\n              \"energy_id\": 3,\r\n              \"price_per_unit\": 0.47,\r\n              \"quantity_of_units\": 4322,\r\n              \"unit_type\": \"kWh\"\r\n            },\r\n            \"gas\": {\r\n              \"energy_id\": 1,\r\n              \"price_per_unit\": 0.34,\r\n              \"quantity_of_units\": 3000,\r\n              \"unit_type\": \"m³\"\r\n            },\r\n            \"nuclear\": {\r\n              \"energy_id\": 2,\r\n              \"price_per_unit\": 0.56,\r\n              \"quantity_of_units\": 0,\r\n              \"unit_type\": \"MW\"\r\n            },\r\n            \"oil\": {\r\n              \"energy_id\": 4,\r\n              \"price_per_unit\": 0.5,\r\n              \"quantity_of_units\": 20,\r\n              \"unit_type\": \"Litres\"\r\n            }\r\n          }`));\n        // .expect(200);\n        // const startingAmount = response.body; \n        // // return startingAmount;\n        // console.log(startingAmount);\n        // //need body\n    }\n    ;\n    // static async checkDataInDefaultState() {\n    //     assert.strictEqual(this.getCurrentEnergySupply., `{\n    //         \"electric\": {\n    //           \"energy_id\": 3,\n    //           \"price_per_unit\": 0.47,\n    //           \"quantity_of_units\": 4322,\n    //           \"unit_type\": \"kWh\"\n    //         },\n    //         \"gas\": {\n    //           \"energy_id\": 1,\n    //           \"price_per_unit\": 0.34,\n    //           \"quantity_of_units\": 3000,\n    //           \"unit_type\": \"m³\"\n    //         },\n    //         \"nuclear\": {\n    //           \"energy_id\": 2,\n    //           \"price_per_unit\": 0.56,\n    //           \"quantity_of_units\": 0,\n    //           \"unit_type\": \"MW\"\n    //         },\n    //         \"oil\": {\n    //           \"energy_id\": 4,\n    //           \"price_per_unit\": 0.5,\n    //           \"quantity_of_units\": 20,\n    //           \"unit_type\": \"Litres\"\n    //         }\n    //       }`);\n    // }\n    static async login(username, password, expectedResponse) {\n        return await (0, supertest_1.default)(baseUrl).post(`/login`)\n            .send(`{\"username\": \"${username}\",\"password\": \"${password}\"}`)\n            .expect(expectedResponse);\n    }\n    ;\n    static async getOrders() {\n        return await (0, supertest_1.default)(baseUrl).get(`/orders`)\n            .expect(200);\n        //need body\n    }\n    ;\n    static async resetEnergyDataToDefault(apiUrl, postBody) {\n        return await (0, supertest_1.default)(baseUrl).post(apiUrl)\n            .send(postBody)\n            .expect(200);\n    }\n    ;\n}\nexports.EnsekApiTestAppActions = EnsekApiTestAppActions;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRjpcXFByb2plY3RzXFxlbnNla1xcRTJFVGVzdHNcXHRlc3RcXG1ldGhvZHNcXGVuc2VrLWFwaS10ZXN0LWFwcC5hY3Rpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFDQSxrRUFBZ0M7QUFFaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsR0FBRyxHQUFHLENBQUMsQ0FBQyx5Q0FBeUM7QUFFekYsTUFBTSxPQUFPLEdBQUcsa0RBQWtELENBQUM7QUFFbkUsTUFBYSxzQkFBc0I7SUFFL0IsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsUUFBZ0IsRUFBRSxRQUFnQjtRQUNyRCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxRQUFRLElBQUksUUFBUSxFQUFFLENBQUM7YUFDMUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsWUFBWTtJQUNoQixDQUFDO0lBQUEsQ0FBQztJQUVGLE1BQU0sQ0FBQyxLQUFLLENBQUMsdUJBQXVCO1FBQ2hDLE1BQU0sUUFBUSxHQUFHLE1BQU0sSUFBQSxtQkFBTyxFQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN2RCxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQXlCM0MsQ0FBQyxDQUFDLENBQUE7UUFDTixnQkFBZ0I7UUFDaEIseUNBQXlDO1FBQ3pDLDRCQUE0QjtRQUM1QiwrQkFBK0I7UUFDL0IsY0FBYztJQUNsQixDQUFDO0lBQUEsQ0FBQztJQUVGLDJDQUEyQztJQUMzQywwREFBMEQ7SUFDMUQsd0JBQXdCO0lBQ3hCLDRCQUE0QjtJQUM1QixvQ0FBb0M7SUFDcEMsdUNBQXVDO0lBQ3ZDLCtCQUErQjtJQUMvQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1QixvQ0FBb0M7SUFDcEMsdUNBQXVDO0lBQ3ZDLDhCQUE4QjtJQUM5QixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLDRCQUE0QjtJQUM1QixvQ0FBb0M7SUFDcEMsb0NBQW9DO0lBQ3BDLDhCQUE4QjtJQUM5QixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1QixtQ0FBbUM7SUFDbkMscUNBQXFDO0lBQ3JDLGtDQUFrQztJQUNsQyxZQUFZO0lBQ1osYUFBYTtJQUNiLElBQUk7SUFFSixNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFnQixFQUFFLFFBQWdCLEVBQUUsZ0JBQXdCO1FBQzNFLE9BQU8sTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQzthQUMzQyxJQUFJLENBQUMsaUJBQWlCLFFBQVEsa0JBQWtCLFFBQVEsSUFBSSxDQUFDO2FBQzdELE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTO1FBQ2xCLE9BQU8sTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQzthQUMzQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDYixXQUFXO0lBQ2YsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsS0FBSyxDQUFDLHdCQUF3QixDQUFDLE1BQWMsRUFBRSxRQUFhO1FBQy9ELE9BQU8sTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQzthQUN6QyxJQUFJLENBQUMsUUFBUSxDQUFDO2FBQ2QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFBQSxDQUFDO0NBQ0w7QUF6RkQsd0RBeUZDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkY6XFxQcm9qZWN0c1xcZW5zZWtcXEUyRVRlc3RzXFx0ZXN0XFxtZXRob2RzXFxlbnNlay1hcGktdGVzdC1hcHAuYWN0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gXCJhc3NlcnRcIjtcclxuaW1wb3J0IHJlcXVlc3QgZnJvbSBcInN1cGVydGVzdFwiO1xyXG5cclxucHJvY2Vzcy5lbnYuTk9ERV9UTFNfUkVKRUNUX1VOQVVUSE9SSVpFRCA9ICcwJzsgLy8gdGhpcyBpcyB0byBieXBhc3MgY2VydGlmaWNhdGlvbiBlcnJvcnNcclxuXHJcbmNvbnN0IGJhc2VVcmwgPSAnaHR0cHM6Ly9lbnNla2FwaWNhbmRpZGF0ZXRlc3QuYXp1cmV3ZWJzaXRlcy5uZXQvJztcclxuXHJcbmV4cG9ydCBjbGFzcyBFbnNla0FwaVRlc3RBcHBBY3Rpb25zIHtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYnV5RW5lcmd5KGVuZXJneUlkOiBudW1iZXIsIHF1YW50aXR5OiBudW1iZXIpIHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QoYmFzZVVybCkucHV0KGAvYnV5LyR7ZW5lcmd5SWR9LyR7cXVhbnRpdHl9YClcclxuICAgICAgICAuZXhwZWN0KDIwMCk7XHJcbiAgICAgICAgLy9uZWVkIGJvZHk/XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBzdGF0aWMgYXN5bmMgY2hlY2tEYXRhSW5EZWZhdWx0U3RhdGUoKSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLmdldCgnL2VuZXJneScpO1xyXG4gICAgICAgIGV4cGVjdChKU09OLnN0cmluZ2lmeShyZXNwb25zZS5ib2R5KSkudG9FcXVhbCgoYHtcclxuICAgICAgICAgICAgXCJlbGVjdHJpY1wiOiB7XHJcbiAgICAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogMyxcclxuICAgICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNDcsXHJcbiAgICAgICAgICAgICAgXCJxdWFudGl0eV9vZl91bml0c1wiOiA0MzIyLFxyXG4gICAgICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwia1doXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJnYXNcIjoge1xyXG4gICAgICAgICAgICAgIFwiZW5lcmd5X2lkXCI6IDEsXHJcbiAgICAgICAgICAgICAgXCJwcmljZV9wZXJfdW5pdFwiOiAwLjM0LFxyXG4gICAgICAgICAgICAgIFwicXVhbnRpdHlfb2ZfdW5pdHNcIjogMzAwMCxcclxuICAgICAgICAgICAgICBcInVuaXRfdHlwZVwiOiBcIm3Cs1wiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwibnVjbGVhclwiOiB7XHJcbiAgICAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogMixcclxuICAgICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNTYsXHJcbiAgICAgICAgICAgICAgXCJxdWFudGl0eV9vZl91bml0c1wiOiAwLFxyXG4gICAgICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwiTVdcIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBcIm9pbFwiOiB7XHJcbiAgICAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogNCxcclxuICAgICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNSxcclxuICAgICAgICAgICAgICBcInF1YW50aXR5X29mX3VuaXRzXCI6IDIwLFxyXG4gICAgICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwiTGl0cmVzXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfWApKSAgICAgICBcclxuICAgICAgICAvLyAuZXhwZWN0KDIwMCk7XHJcbiAgICAgICAgLy8gY29uc3Qgc3RhcnRpbmdBbW91bnQgPSByZXNwb25zZS5ib2R5OyBcclxuICAgICAgICAvLyAvLyByZXR1cm4gc3RhcnRpbmdBbW91bnQ7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coc3RhcnRpbmdBbW91bnQpO1xyXG4gICAgICAgIC8vIC8vbmVlZCBib2R5XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIHN0YXRpYyBhc3luYyBjaGVja0RhdGFJbkRlZmF1bHRTdGF0ZSgpIHtcclxuICAgIC8vICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodGhpcy5nZXRDdXJyZW50RW5lcmd5U3VwcGx5LiwgYHtcclxuICAgIC8vICAgICAgICAgXCJlbGVjdHJpY1wiOiB7XHJcbiAgICAvLyAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogMyxcclxuICAgIC8vICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNDcsXHJcbiAgICAvLyAgICAgICAgICAgXCJxdWFudGl0eV9vZl91bml0c1wiOiA0MzIyLFxyXG4gICAgLy8gICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwia1doXCJcclxuICAgIC8vICAgICAgICAgfSxcclxuICAgIC8vICAgICAgICAgXCJnYXNcIjoge1xyXG4gICAgLy8gICAgICAgICAgIFwiZW5lcmd5X2lkXCI6IDEsXHJcbiAgICAvLyAgICAgICAgICAgXCJwcmljZV9wZXJfdW5pdFwiOiAwLjM0LFxyXG4gICAgLy8gICAgICAgICAgIFwicXVhbnRpdHlfb2ZfdW5pdHNcIjogMzAwMCxcclxuICAgIC8vICAgICAgICAgICBcInVuaXRfdHlwZVwiOiBcIm3Cs1wiXHJcbiAgICAvLyAgICAgICAgIH0sXHJcbiAgICAvLyAgICAgICAgIFwibnVjbGVhclwiOiB7XHJcbiAgICAvLyAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogMixcclxuICAgIC8vICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNTYsXHJcbiAgICAvLyAgICAgICAgICAgXCJxdWFudGl0eV9vZl91bml0c1wiOiAwLFxyXG4gICAgLy8gICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwiTVdcIlxyXG4gICAgLy8gICAgICAgICB9LFxyXG4gICAgLy8gICAgICAgICBcIm9pbFwiOiB7XHJcbiAgICAvLyAgICAgICAgICAgXCJlbmVyZ3lfaWRcIjogNCxcclxuICAgIC8vICAgICAgICAgICBcInByaWNlX3Blcl91bml0XCI6IDAuNSxcclxuICAgIC8vICAgICAgICAgICBcInF1YW50aXR5X29mX3VuaXRzXCI6IDIwLFxyXG4gICAgLy8gICAgICAgICAgIFwidW5pdF90eXBlXCI6IFwiTGl0cmVzXCJcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgfWApO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBsb2dpbih1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nLCBleHBlY3RlZFJlc3BvbnNlOiBudW1iZXIpIHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5wb3N0KGAvbG9naW5gKVxyXG4gICAgICAgIC5zZW5kKGB7XCJ1c2VybmFtZVwiOiBcIiR7dXNlcm5hbWV9XCIsXCJwYXNzd29yZFwiOiBcIiR7cGFzc3dvcmR9XCJ9YClcclxuICAgICAgICAuZXhwZWN0KGV4cGVjdGVkUmVzcG9uc2UpO1xyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgZ2V0T3JkZXJzKCkge1xyXG4gICAgICAgIHJldHVybiBhd2FpdCByZXF1ZXN0KGJhc2VVcmwpLmdldChgL29yZGVyc2ApXHJcbiAgICAgICAgLmV4cGVjdCgyMDApO1xyXG4gICAgICAgIC8vbmVlZCBib2R5XHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyByZXNldEVuZXJneURhdGFUb0RlZmF1bHQoYXBpVXJsOiBzdHJpbmcsIHBvc3RCb2R5OiBhbnkpIHtcclxuICAgICAgICByZXR1cm4gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5wb3N0KGFwaVVybClcclxuICAgICAgICAuc2VuZChwb3N0Qm9keSlcclxuICAgICAgICAuZXhwZWN0KDIwMCk7XHJcbiAgICB9O1xyXG59Il0sInZlcnNpb24iOjN9","originalCode":"import assert from \"assert\";\r\nimport request from \"supertest\";\r\n\r\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\r\n\r\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\r\n\r\nexport class EnsekApiTestAppActions {\r\n\r\n    static async buyEnergy(energyId: number, quantity: number) {\r\n        const response = await request(baseUrl).put(`/buy/${energyId}/${quantity}`)\r\n        .expect(200);\r\n        //need body?\r\n    };\r\n    \r\n    static async checkDataInDefaultState() {\r\n        const response = await request(baseUrl).get('/energy');\r\n        expect(JSON.stringify(response.body)).toEqual((`{\r\n            \"electric\": {\r\n              \"energy_id\": 3,\r\n              \"price_per_unit\": 0.47,\r\n              \"quantity_of_units\": 4322,\r\n              \"unit_type\": \"kWh\"\r\n            },\r\n            \"gas\": {\r\n              \"energy_id\": 1,\r\n              \"price_per_unit\": 0.34,\r\n              \"quantity_of_units\": 3000,\r\n              \"unit_type\": \"m³\"\r\n            },\r\n            \"nuclear\": {\r\n              \"energy_id\": 2,\r\n              \"price_per_unit\": 0.56,\r\n              \"quantity_of_units\": 0,\r\n              \"unit_type\": \"MW\"\r\n            },\r\n            \"oil\": {\r\n              \"energy_id\": 4,\r\n              \"price_per_unit\": 0.5,\r\n              \"quantity_of_units\": 20,\r\n              \"unit_type\": \"Litres\"\r\n            }\r\n          }`))       \r\n        // .expect(200);\r\n        // const startingAmount = response.body; \r\n        // // return startingAmount;\r\n        // console.log(startingAmount);\r\n        // //need body\r\n    };\r\n\r\n    // static async checkDataInDefaultState() {\r\n    //     assert.strictEqual(this.getCurrentEnergySupply., `{\r\n    //         \"electric\": {\r\n    //           \"energy_id\": 3,\r\n    //           \"price_per_unit\": 0.47,\r\n    //           \"quantity_of_units\": 4322,\r\n    //           \"unit_type\": \"kWh\"\r\n    //         },\r\n    //         \"gas\": {\r\n    //           \"energy_id\": 1,\r\n    //           \"price_per_unit\": 0.34,\r\n    //           \"quantity_of_units\": 3000,\r\n    //           \"unit_type\": \"m³\"\r\n    //         },\r\n    //         \"nuclear\": {\r\n    //           \"energy_id\": 2,\r\n    //           \"price_per_unit\": 0.56,\r\n    //           \"quantity_of_units\": 0,\r\n    //           \"unit_type\": \"MW\"\r\n    //         },\r\n    //         \"oil\": {\r\n    //           \"energy_id\": 4,\r\n    //           \"price_per_unit\": 0.5,\r\n    //           \"quantity_of_units\": 20,\r\n    //           \"unit_type\": \"Litres\"\r\n    //         }\r\n    //       }`);\r\n    // }\r\n\r\n    static async login(username: string, password: string, expectedResponse: number) {\r\n        return await request(baseUrl).post(`/login`)\r\n        .send(`{\"username\": \"${username}\",\"password\": \"${password}\"}`)\r\n        .expect(expectedResponse);\r\n    };\r\n\r\n    static async getOrders() {\r\n        return await request(baseUrl).get(`/orders`)\r\n        .expect(200);\r\n        //need body\r\n    };\r\n\r\n    static async resetEnergyDataToDefault(apiUrl: string, postBody: any) {\r\n        return await request(baseUrl).post(apiUrl)\r\n        .send(postBody)\r\n        .expect(200);\r\n    };\r\n}","sourceMapPath":"C:/Users/Darren/AppData/Local/Temp/jest/jest-transform-cache-640cf45b7291600be04a7cde20907db4-d1d5bfaad8659acd06069518d3e76e6c/76/ensekapitestappactions_76d1e8ffcbb4fdc890ca18452c1e39b3.map","wrapperLength":89},"result":{"scriptId":"1811","url":"F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10560,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":10557,"count":1}],"isBlockCoverage":true},{"functionName":"buyEnergy","ranges":[{"startOffset":508,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"checkDataInDefaultState","ranges":[{"startOffset":717,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"login","ranges":[{"startOffset":2769,"endOffset":3010,"count":3}],"isBlockCoverage":true},{"functionName":"getOrders","ranges":[{"startOffset":3028,"endOffset":3169,"count":0}],"isBlockCoverage":false},{"functionName":"resetEnergyDataToDefault","ranges":[{"startOffset":3187,"endOffset":3365,"count":0}],"isBlockCoverage":false}]}}]}],"wasInterrupted":false,"config":{"bail":0,"changedFilesWithAncestor":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"F:\\Projects\\ensek\\E2ETests\\reports\\coverage\\v8","coverageProvider":"v8","coverageReporters":["html-spa"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"passWithNoTests":true,"projects":[],"reporters":[["default",{}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-junit\\index.js",{"suiteName":"MICA 4 E2E Tests","outputDirectory":"reports/jest-junit","outputName":"Jest Results - 08-08-2022 12.26.xml","suiteNameTemplate":"{title}","classNameTemplate":"{classname}-{title}","titleTemplate":"{classname}-{title}","ancestorSeparator":" › ","includeShortConsoleOutput":true}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-html-reporter\\dist\\index.js",{"pageTitle":"MICA 4 E2E Test Report","includeFailureMsg":true,"includeConsoleLog":true,"outputPath":"reports/jest-basic/Basic Report - 08-08-2022 12.26.html"}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/jest-html","filename":"jest-report - 08-08-2022 12.26.html","pageTitle":"Test Report","expand":false,"customInfos":[{"title":"MICA 4"}],"includeConsoleLog":true}]],"rootDir":"F:\\Projects\\ensek\\E2ETests","runTestsByPath":false,"skipFilter":false,"testFailureExitCode":1,"testPathPattern":"","testSequencer":"F:\\Projects\\ensek\\E2ETests\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":50000,"updateSnapshot":"new","useStderr":false,"verbose":false,"watch":false,"watchAll":true,"watchman":true},"endTime":1659957990212,"_reporterOptions":{"publicPath":"reports/jest-html","filename":"jest-report - 08-08-2022 12.26.html","expand":false,"pageTitle":"Test Report","hideIcon":false,"customInfos":[{"title":"MICA 4"}],"testCommand":"npx jest","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","includeConsoleLog":true},"attachInfos":{}})