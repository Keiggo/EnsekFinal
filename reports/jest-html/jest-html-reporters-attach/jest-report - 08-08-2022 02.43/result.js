window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":1,"numPassedTests":4,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":2,"numTotalTests":5,"startTime":1659967027660,"success":false,"testResults":[{"leaks":false,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1659967029969,"runtime":1263,"slow":false,"start":1659967028706},"skipped":false,"testFilePath":"F:\\Projects\\ensek\\E2ETests\\test\\specs\\purchase-energy.spec.ts","testResults":[{"ancestorTitles":["purchase energy tests","when the user purchases 500 units of electricity"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"purchase energy tests when the user purchases 500 units of electricity reduces the available electric by 500 units","location":null,"numPassingAsserts":0,"status":"passed","title":"reduces the available electric by 500 units"},{"ancestorTitles":["purchase energy tests","when the user purchases 500 units of electricity"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"purchase energy tests when the user purchases 500 units of electricity registers a new order has been created","location":null,"numPassingAsserts":0,"status":"passed","title":"registers a new order has been created"}],"failureMessage":null,"v8Coverage":[{"codeTransformResult":{"code":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnsekApiTestAppActions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst supertest_1 = tslib_1.__importDefault(require(\"supertest\"));\nconst luxon_1 = require(\"luxon\");\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\nclass EnsekApiTestAppActions {\n    static async buyEnergy(energyId, quantity) {\n        const response = await (0, supertest_1.default)(baseUrl).put(`/buy/${energyId}/${quantity}`)\n            .expect(200);\n        //need body?\n    }\n    ;\n    static async checkEnergy(electricUnits = 4322, gasUnits = 3000, nuclearUnits = 0, oilUnits = 20) {\n        const response = await (0, supertest_1.default)(baseUrl).get('/energy');\n        expect(JSON.stringify(response.body)).toEqual((`{\"electric\":{\"energy_id\":3,\"price_per_unit\":0.47,\"quantity_of_units\":${electricUnits},\"unit_type\":\"kWh\"},\"gas\":{\"energy_id\":1,\"price_per_unit\":0.34,\"quantity_of_units\":${gasUnits},\"unit_type\":\"m³\"},\"nuclear\":{\"energy_id\":2,\"price_per_unit\":0.56,\"quantity_of_units\":${nuclearUnits},\"unit_type\":\"MW\"},\"oil\":{\"energy_id\":4,\"price_per_unit\":0.5,\"quantity_of_units\":${oilUnits},\"unit_type\":\"Litres\"}}`));\n    }\n    ;\n    static async login(username, password, expectedResponse) {\n        return await (0, supertest_1.default)(baseUrl).post(`/login`)\n            .send(JSON.parse(`{\"username\":\"${username}\",\"password\":\"${password}\"}`))\n            .expect(expectedResponse);\n    }\n    ;\n    static async checkOrders(energyType, unitsSold) {\n        const now = luxon_1.DateTime;\n        const response = await (0, supertest_1.default)(baseUrl).get(`/orders`);\n        expect(JSON.stringify(response.body)).toContain(`{\"fuel\":\"${energyType}\",\"id\":31fc32da-bccb-44ab-9352-4f43fc44ed4b\",\"quantity\":${unitsSold},\"time\":\"${now.fromHTTP.toString()}\"}`);\n    }\n    ;\n    static async resetEnergyDataToDefault() {\n        return await (0, supertest_1.default)(baseUrl).post('/reset')\n            .send('')\n            .expect(200);\n    }\n    ;\n}\nexports.EnsekApiTestAppActions = EnsekApiTestAppActions;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRjpcXFByb2plY3RzXFxlbnNla1xcRTJFVGVzdHNcXHRlc3RcXG1ldGhvZHNcXGVuc2VrLWFwaS10ZXN0LWFwcC5hY3Rpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxrRUFBZ0M7QUFDaEMsaUNBQWlDO0FBRWpDLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBQTRCLEdBQUcsR0FBRyxDQUFDLENBQUMseUNBQXlDO0FBRXpGLE1BQU0sT0FBTyxHQUFHLGtEQUFrRCxDQUFDO0FBRW5FLE1BQWEsc0JBQXNCO0lBRS9CLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFFBQWdCLEVBQUUsUUFBZ0I7UUFDckQsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO2FBQzFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNiLFlBQVk7SUFDaEIsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxnQkFBd0IsSUFBSSxFQUFFLFdBQW1CLElBQUksRUFBRSxlQUF1QixDQUFDLEVBQUUsV0FBbUIsRUFBRTtRQUMzSCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsd0VBQXdFLGFBQWEsc0ZBQXNGLFFBQVEseUZBQXlGLFlBQVksb0ZBQW9GLFFBQVEseUJBQXlCLENBQUMsQ0FBQyxDQUFBO0lBQ2xjLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBZ0IsRUFBRSxRQUFnQixFQUFFLGdCQUF3QjtRQUMzRSxPQUFPLE1BQU0sSUFBQSxtQkFBTyxFQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7YUFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLFFBQVEsaUJBQWlCLFFBQVEsSUFBSSxDQUFDLENBQUM7YUFDdkUsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxVQUFrQixFQUFFLFNBQWlCO1FBQzFELE1BQU0sR0FBRyxHQUFHLGdCQUFRLENBQUM7UUFFckIsTUFBTSxRQUFRLEdBQUksTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxZQUFZLFVBQVUsMkRBQTJELFNBQVMsWUFBWSxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN2TCxDQUFDO0lBQUEsQ0FBQztJQUVGLE1BQU0sQ0FBQyxLQUFLLENBQUMsd0JBQXdCO1FBQ2pDLE9BQU8sTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQzthQUMzQyxJQUFJLENBQUMsRUFBRSxDQUFDO2FBQ1IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFBQSxDQUFDO0NBQ0w7QUEvQkQsd0RBK0JDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkY6XFxQcm9qZWN0c1xcZW5zZWtcXEUyRVRlc3RzXFx0ZXN0XFxtZXRob2RzXFxlbnNlay1hcGktdGVzdC1hcHAuYWN0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVxdWVzdCBmcm9tIFwic3VwZXJ0ZXN0XCI7XHJcbmltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSBcImx1eG9uXCI7XHJcblxyXG5wcm9jZXNzLmVudi5OT0RFX1RMU19SRUpFQ1RfVU5BVVRIT1JJWkVEID0gJzAnOyAvLyB0aGlzIGlzIHRvIGJ5cGFzcyBjZXJ0aWZpY2F0aW9uIGVycm9yc1xyXG5cclxuY29uc3QgYmFzZVVybCA9ICdodHRwczovL2Vuc2VrYXBpY2FuZGlkYXRldGVzdC5henVyZXdlYnNpdGVzLm5ldC8nO1xyXG5cclxuZXhwb3J0IGNsYXNzIEVuc2VrQXBpVGVzdEFwcEFjdGlvbnMge1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBidXlFbmVyZ3koZW5lcmd5SWQ6IG51bWJlciwgcXVhbnRpdHk6IG51bWJlcikge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5wdXQoYC9idXkvJHtlbmVyZ3lJZH0vJHtxdWFudGl0eX1gKVxyXG4gICAgICAgIC5leHBlY3QoMjAwKTtcclxuICAgICAgICAvL25lZWQgYm9keT9cclxuICAgIH07XHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBjaGVja0VuZXJneShlbGVjdHJpY1VuaXRzOiBudW1iZXIgPSA0MzIyLCBnYXNVbml0czogbnVtYmVyID0gMzAwMCwgbnVjbGVhclVuaXRzOiBudW1iZXIgPSAwLCBvaWxVbml0czogbnVtYmVyID0gMjApIHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QoYmFzZVVybCkuZ2V0KCcvZW5lcmd5Jyk7XHJcbiAgICAgICAgZXhwZWN0KEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmJvZHkpKS50b0VxdWFsKChge1wiZWxlY3RyaWNcIjp7XCJlbmVyZ3lfaWRcIjozLFwicHJpY2VfcGVyX3VuaXRcIjowLjQ3LFwicXVhbnRpdHlfb2ZfdW5pdHNcIjoke2VsZWN0cmljVW5pdHN9LFwidW5pdF90eXBlXCI6XCJrV2hcIn0sXCJnYXNcIjp7XCJlbmVyZ3lfaWRcIjoxLFwicHJpY2VfcGVyX3VuaXRcIjowLjM0LFwicXVhbnRpdHlfb2ZfdW5pdHNcIjoke2dhc1VuaXRzfSxcInVuaXRfdHlwZVwiOlwibcKzXCJ9LFwibnVjbGVhclwiOntcImVuZXJneV9pZFwiOjIsXCJwcmljZV9wZXJfdW5pdFwiOjAuNTYsXCJxdWFudGl0eV9vZl91bml0c1wiOiR7bnVjbGVhclVuaXRzfSxcInVuaXRfdHlwZVwiOlwiTVdcIn0sXCJvaWxcIjp7XCJlbmVyZ3lfaWRcIjo0LFwicHJpY2VfcGVyX3VuaXRcIjowLjUsXCJxdWFudGl0eV9vZl91bml0c1wiOiR7b2lsVW5pdHN9LFwidW5pdF90eXBlXCI6XCJMaXRyZXNcIn19YCkpICAgICAgIFxyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgbG9naW4odXNlcm5hbWU6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZywgZXhwZWN0ZWRSZXNwb25zZTogbnVtYmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlcXVlc3QoYmFzZVVybCkucG9zdChgL2xvZ2luYClcclxuICAgICAgICAuc2VuZChKU09OLnBhcnNlKGB7XCJ1c2VybmFtZVwiOlwiJHt1c2VybmFtZX1cIixcInBhc3N3b3JkXCI6XCIke3Bhc3N3b3JkfVwifWApKVxyXG4gICAgICAgIC5leHBlY3QoZXhwZWN0ZWRSZXNwb25zZSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBjaGVja09yZGVycyhlbmVyZ3lUeXBlOiBzdHJpbmcsIHVuaXRzU29sZDogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3Qgbm93ID0gRGF0ZVRpbWU7XHJcblxyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gIGF3YWl0IHJlcXVlc3QoYmFzZVVybCkuZ2V0KGAvb3JkZXJzYCk7XHJcbiAgICAgICAgZXhwZWN0KEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmJvZHkpKS50b0NvbnRhaW4oYHtcImZ1ZWxcIjpcIiR7ZW5lcmd5VHlwZX1cIixcImlkXCI6MzFmYzMyZGEtYmNjYi00NGFiLTkzNTItNGY0M2ZjNDRlZDRiXCIsXCJxdWFudGl0eVwiOiR7dW5pdHNTb2xkfSxcInRpbWVcIjpcIiR7bm93LmZyb21IVFRQLnRvU3RyaW5nKCl9XCJ9YCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyByZXNldEVuZXJneURhdGFUb0RlZmF1bHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlcXVlc3QoYmFzZVVybCkucG9zdCgnL3Jlc2V0JylcclxuICAgICAgICAuc2VuZCgnJylcclxuICAgICAgICAuZXhwZWN0KDIwMCk7XHJcbiAgICB9O1xyXG59Il0sInZlcnNpb24iOjN9","originalCode":"import request from \"supertest\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\r\n\r\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\r\n\r\nexport class EnsekApiTestAppActions {\r\n\r\n    static async buyEnergy(energyId: number, quantity: number) {\r\n        const response = await request(baseUrl).put(`/buy/${energyId}/${quantity}`)\r\n        .expect(200);\r\n        //need body?\r\n    };\r\n    \r\n    static async checkEnergy(electricUnits: number = 4322, gasUnits: number = 3000, nuclearUnits: number = 0, oilUnits: number = 20) {\r\n        const response = await request(baseUrl).get('/energy');\r\n        expect(JSON.stringify(response.body)).toEqual((`{\"electric\":{\"energy_id\":3,\"price_per_unit\":0.47,\"quantity_of_units\":${electricUnits},\"unit_type\":\"kWh\"},\"gas\":{\"energy_id\":1,\"price_per_unit\":0.34,\"quantity_of_units\":${gasUnits},\"unit_type\":\"m³\"},\"nuclear\":{\"energy_id\":2,\"price_per_unit\":0.56,\"quantity_of_units\":${nuclearUnits},\"unit_type\":\"MW\"},\"oil\":{\"energy_id\":4,\"price_per_unit\":0.5,\"quantity_of_units\":${oilUnits},\"unit_type\":\"Litres\"}}`))       \r\n    };\r\n\r\n    static async login(username: string, password: string, expectedResponse: number) {\r\n        return await request(baseUrl).post(`/login`)\r\n        .send(JSON.parse(`{\"username\":\"${username}\",\"password\":\"${password}\"}`))\r\n        .expect(expectedResponse);\r\n    };\r\n\r\n    static async checkOrders(energyType: string, unitsSold: number) {\r\n        const now = DateTime;\r\n\r\n        const response =  await request(baseUrl).get(`/orders`);\r\n        expect(JSON.stringify(response.body)).toContain(`{\"fuel\":\"${energyType}\",\"id\":31fc32da-bccb-44ab-9352-4f43fc44ed4b\",\"quantity\":${unitsSold},\"time\":\"${now.fromHTTP.toString()}\"}`);\r\n    };\r\n\r\n    static async resetEnergyDataToDefault() {\r\n        return await request(baseUrl).post('/reset')\r\n        .send('')\r\n        .expect(200);\r\n    };\r\n}","sourceMapPath":"C:/Users/Darren/AppData/Local/Temp/jest/jest-transform-cache-640cf45b7291600be04a7cde20907db4-d1d5bfaad8659acd06069518d3e76e6c/42/ensekapitestappactions_42d1fc7d5c1b182ef9e09fc2505171ea.map","wrapperLength":89},"result":{"scriptId":"1811","url":"F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7438,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":7435,"count":1}],"isBlockCoverage":true},{"functionName":"buyEnergy","ranges":[{"startOffset":542,"endOffset":733,"count":1},{"startOffset":706,"endOffset":732,"count":0}],"isBlockCoverage":true},{"functionName":"checkEnergy","ranges":[{"startOffset":751,"endOffset":1385,"count":2},{"startOffset":923,"endOffset":1384,"count":0}],"isBlockCoverage":true},{"functionName":"login","ranges":[{"startOffset":1403,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"checkOrders","ranges":[{"startOffset":1672,"endOffset":2027,"count":1},{"startOffset":1833,"endOffset":2026,"count":0}],"isBlockCoverage":true},{"functionName":"resetEnergyDataToDefault","ranges":[{"startOffset":2045,"endOffset":2203,"count":1}],"isBlockCoverage":true}]}}]},{"leaks":false,"numFailingTests":1,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1659967031481,"runtime":2763,"slow":false,"start":1659967028718},"skipped":false,"testFilePath":"F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts","testResults":[{"ancestorTitles":["login tests","when the user logs in with valid test credentials"],"duration":515,"failureDetails":[],"failureMessages":[],"fullName":"login tests when the user logs in with valid test credentials successfully logs the user in","location":null,"numPassingAsserts":0,"status":"passed","title":"successfully logs the user in"},{"ancestorTitles":["login tests","when the user logs in with invalid credentials"],"duration":496,"failureDetails":[],"failureMessages":[],"fullName":"login tests when the user logs in with invalid credentials prevents the user from logging in","location":null,"numPassingAsserts":0,"status":"passed","title":"prevents the user from logging in"},{"ancestorTitles":["login tests","when the user logs in with blank credentials"],"duration":491,"failureDetails":[{"actual":"","error":{},"expected":"","matcherName":"","message":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"","passed":false,"stack":"Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:24:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:22:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"}],"failureMessages":["Error: expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n    at Function.login (F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts:24:10)\n    at Object.<anonymous> (F:\\Projects\\ensek\\E2ETests\\test\\specs\\login.spec.ts:22:42)\n    at Object.asyncJestTest (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:106:37)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:28:19)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-jasmine2\\build\\queueRunner.js:75:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n----\n    at Test._assertStatus (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:252:14)\n    at F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:306:17\n    at Test._assertFunction (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:285:13)\n    at Test.assert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:164:23)\n    at localAssert (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:120:14)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\supertest\\lib\\test.js:125:7)\n    at Test.callback (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:924:3)\n    at fn (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\index.js:1153:18)\n    at IncomingMessage.<anonymous> (F:\\Projects\\ensek\\E2ETests\\node_modules\\superagent\\src\\node\\parsers\\json.js:19:7)\n    at IncomingMessage.emit (node:events:539:35)\n    at endReadableNT (node:internal/streams/readable:1345:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"],"fullName":"login tests when the user logs in with blank credentials prevents the user from logging in","location":null,"numPassingAsserts":0,"status":"failed","title":"prevents the user from logging in"}],"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mlogin tests › when the user logs in with blank credentials › prevents the user from logging in\u001b[39m\u001b[22m\n\n    expected 401 \"Unauthorized\", got 500 \"Internal Server Error\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mawait\u001b[39m request(baseUrl)\u001b[33m.\u001b[39mpost(\u001b[32m`/login`\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m         \u001b[33m.\u001b[39msend(\u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(\u001b[32m`{\"username\":\"${username}\",\"password\":\"${password}\"}`\u001b[39m))\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 24 |\u001b[39m         \u001b[33m.\u001b[39mexpect(expectedResponse)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 |\u001b[39m     \u001b[36mstatic\u001b[39m \u001b[36masync\u001b[39m checkOrders(energyType\u001b[33m:\u001b[39m string\u001b[33m,\u001b[39m unitsSold\u001b[33m:\u001b[39m number) {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.login (\u001b[22m\u001b[2mtest/methods/ensek-api-test-app.actions.ts\u001b[2m:24:10)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/specs/login.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:42)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      ----\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertStatus (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:252:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:306:17\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test._assertFunction (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:285:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.assert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:164:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat localAssert (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:120:14)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/supertest/lib/test.js\u001b[2m:125:7)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Test.callback (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:924:3)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fn (\u001b[22m\u001b[2mnode_modules/superagent/src/node/index.js\u001b[2m:1153:18)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat IncomingMessage.<anonymous> (\u001b[22m\u001b[2mnode_modules/superagent/src/node/parsers/json.js\u001b[2m:19:7)\u001b[22m\u001b[2m\u001b[22m\n","v8Coverage":[{"codeTransformResult":{"code":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnsekApiTestAppActions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst supertest_1 = tslib_1.__importDefault(require(\"supertest\"));\nconst luxon_1 = require(\"luxon\");\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\nclass EnsekApiTestAppActions {\n    static async buyEnergy(energyId, quantity) {\n        const response = await (0, supertest_1.default)(baseUrl).put(`/buy/${energyId}/${quantity}`)\n            .expect(200);\n        //need body?\n    }\n    ;\n    static async checkEnergy(electricUnits = 4322, gasUnits = 3000, nuclearUnits = 0, oilUnits = 20) {\n        const response = await (0, supertest_1.default)(baseUrl).get('/energy');\n        expect(JSON.stringify(response.body)).toEqual((`{\"electric\":{\"energy_id\":3,\"price_per_unit\":0.47,\"quantity_of_units\":${electricUnits},\"unit_type\":\"kWh\"},\"gas\":{\"energy_id\":1,\"price_per_unit\":0.34,\"quantity_of_units\":${gasUnits},\"unit_type\":\"m³\"},\"nuclear\":{\"energy_id\":2,\"price_per_unit\":0.56,\"quantity_of_units\":${nuclearUnits},\"unit_type\":\"MW\"},\"oil\":{\"energy_id\":4,\"price_per_unit\":0.5,\"quantity_of_units\":${oilUnits},\"unit_type\":\"Litres\"}}`));\n    }\n    ;\n    static async login(username, password, expectedResponse) {\n        return await (0, supertest_1.default)(baseUrl).post(`/login`)\n            .send(JSON.parse(`{\"username\":\"${username}\",\"password\":\"${password}\"}`))\n            .expect(expectedResponse);\n    }\n    ;\n    static async checkOrders(energyType, unitsSold) {\n        const now = luxon_1.DateTime;\n        const response = await (0, supertest_1.default)(baseUrl).get(`/orders`);\n        expect(JSON.stringify(response.body)).toContain(`{\"fuel\":\"${energyType}\",\"id\":31fc32da-bccb-44ab-9352-4f43fc44ed4b\",\"quantity\":${unitsSold},\"time\":\"${now.fromHTTP.toString()}\"}`);\n    }\n    ;\n    static async resetEnergyDataToDefault() {\n        return await (0, supertest_1.default)(baseUrl).post('/reset')\n            .send('')\n            .expect(200);\n    }\n    ;\n}\nexports.EnsekApiTestAppActions = EnsekApiTestAppActions;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRjpcXFByb2plY3RzXFxlbnNla1xcRTJFVGVzdHNcXHRlc3RcXG1ldGhvZHNcXGVuc2VrLWFwaS10ZXN0LWFwcC5hY3Rpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxrRUFBZ0M7QUFDaEMsaUNBQWlDO0FBRWpDLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBQTRCLEdBQUcsR0FBRyxDQUFDLENBQUMseUNBQXlDO0FBRXpGLE1BQU0sT0FBTyxHQUFHLGtEQUFrRCxDQUFDO0FBRW5FLE1BQWEsc0JBQXNCO0lBRS9CLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFFBQWdCLEVBQUUsUUFBZ0I7UUFDckQsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO2FBQzFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNiLFlBQVk7SUFDaEIsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxnQkFBd0IsSUFBSSxFQUFFLFdBQW1CLElBQUksRUFBRSxlQUF1QixDQUFDLEVBQUUsV0FBbUIsRUFBRTtRQUMzSCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUEsbUJBQU8sRUFBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsd0VBQXdFLGFBQWEsc0ZBQXNGLFFBQVEseUZBQXlGLFlBQVksb0ZBQW9GLFFBQVEseUJBQXlCLENBQUMsQ0FBQyxDQUFBO0lBQ2xjLENBQUM7SUFBQSxDQUFDO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBZ0IsRUFBRSxRQUFnQixFQUFFLGdCQUF3QjtRQUMzRSxPQUFPLE1BQU0sSUFBQSxtQkFBTyxFQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7YUFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLFFBQVEsaUJBQWlCLFFBQVEsSUFBSSxDQUFDLENBQUM7YUFDdkUsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxVQUFrQixFQUFFLFNBQWlCO1FBQzFELE1BQU0sR0FBRyxHQUFHLGdCQUFRLENBQUM7UUFFckIsTUFBTSxRQUFRLEdBQUksTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxZQUFZLFVBQVUsMkRBQTJELFNBQVMsWUFBWSxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN2TCxDQUFDO0lBQUEsQ0FBQztJQUVGLE1BQU0sQ0FBQyxLQUFLLENBQUMsd0JBQXdCO1FBQ2pDLE9BQU8sTUFBTSxJQUFBLG1CQUFPLEVBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQzthQUMzQyxJQUFJLENBQUMsRUFBRSxDQUFDO2FBQ1IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFBQSxDQUFDO0NBQ0w7QUEvQkQsd0RBK0JDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkY6XFxQcm9qZWN0c1xcZW5zZWtcXEUyRVRlc3RzXFx0ZXN0XFxtZXRob2RzXFxlbnNlay1hcGktdGVzdC1hcHAuYWN0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVxdWVzdCBmcm9tIFwic3VwZXJ0ZXN0XCI7XHJcbmltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSBcImx1eG9uXCI7XHJcblxyXG5wcm9jZXNzLmVudi5OT0RFX1RMU19SRUpFQ1RfVU5BVVRIT1JJWkVEID0gJzAnOyAvLyB0aGlzIGlzIHRvIGJ5cGFzcyBjZXJ0aWZpY2F0aW9uIGVycm9yc1xyXG5cclxuY29uc3QgYmFzZVVybCA9ICdodHRwczovL2Vuc2VrYXBpY2FuZGlkYXRldGVzdC5henVyZXdlYnNpdGVzLm5ldC8nO1xyXG5cclxuZXhwb3J0IGNsYXNzIEVuc2VrQXBpVGVzdEFwcEFjdGlvbnMge1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBidXlFbmVyZ3koZW5lcmd5SWQ6IG51bWJlciwgcXVhbnRpdHk6IG51bWJlcikge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdChiYXNlVXJsKS5wdXQoYC9idXkvJHtlbmVyZ3lJZH0vJHtxdWFudGl0eX1gKVxyXG4gICAgICAgIC5leHBlY3QoMjAwKTtcclxuICAgICAgICAvL25lZWQgYm9keT9cclxuICAgIH07XHJcbiAgICBcclxuICAgIHN0YXRpYyBhc3luYyBjaGVja0VuZXJneShlbGVjdHJpY1VuaXRzOiBudW1iZXIgPSA0MzIyLCBnYXNVbml0czogbnVtYmVyID0gMzAwMCwgbnVjbGVhclVuaXRzOiBudW1iZXIgPSAwLCBvaWxVbml0czogbnVtYmVyID0gMjApIHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QoYmFzZVVybCkuZ2V0KCcvZW5lcmd5Jyk7XHJcbiAgICAgICAgZXhwZWN0KEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmJvZHkpKS50b0VxdWFsKChge1wiZWxlY3RyaWNcIjp7XCJlbmVyZ3lfaWRcIjozLFwicHJpY2VfcGVyX3VuaXRcIjowLjQ3LFwicXVhbnRpdHlfb2ZfdW5pdHNcIjoke2VsZWN0cmljVW5pdHN9LFwidW5pdF90eXBlXCI6XCJrV2hcIn0sXCJnYXNcIjp7XCJlbmVyZ3lfaWRcIjoxLFwicHJpY2VfcGVyX3VuaXRcIjowLjM0LFwicXVhbnRpdHlfb2ZfdW5pdHNcIjoke2dhc1VuaXRzfSxcInVuaXRfdHlwZVwiOlwibcKzXCJ9LFwibnVjbGVhclwiOntcImVuZXJneV9pZFwiOjIsXCJwcmljZV9wZXJfdW5pdFwiOjAuNTYsXCJxdWFudGl0eV9vZl91bml0c1wiOiR7bnVjbGVhclVuaXRzfSxcInVuaXRfdHlwZVwiOlwiTVdcIn0sXCJvaWxcIjp7XCJlbmVyZ3lfaWRcIjo0LFwicHJpY2VfcGVyX3VuaXRcIjowLjUsXCJxdWFudGl0eV9vZl91bml0c1wiOiR7b2lsVW5pdHN9LFwidW5pdF90eXBlXCI6XCJMaXRyZXNcIn19YCkpICAgICAgIFxyXG4gICAgfTtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgbG9naW4odXNlcm5hbWU6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZywgZXhwZWN0ZWRSZXNwb25zZTogbnVtYmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlcXVlc3QoYmFzZVVybCkucG9zdChgL2xvZ2luYClcclxuICAgICAgICAuc2VuZChKU09OLnBhcnNlKGB7XCJ1c2VybmFtZVwiOlwiJHt1c2VybmFtZX1cIixcInBhc3N3b3JkXCI6XCIke3Bhc3N3b3JkfVwifWApKVxyXG4gICAgICAgIC5leHBlY3QoZXhwZWN0ZWRSZXNwb25zZSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBjaGVja09yZGVycyhlbmVyZ3lUeXBlOiBzdHJpbmcsIHVuaXRzU29sZDogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3Qgbm93ID0gRGF0ZVRpbWU7XHJcblxyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gIGF3YWl0IHJlcXVlc3QoYmFzZVVybCkuZ2V0KGAvb3JkZXJzYCk7XHJcbiAgICAgICAgZXhwZWN0KEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmJvZHkpKS50b0NvbnRhaW4oYHtcImZ1ZWxcIjpcIiR7ZW5lcmd5VHlwZX1cIixcImlkXCI6MzFmYzMyZGEtYmNjYi00NGFiLTkzNTItNGY0M2ZjNDRlZDRiXCIsXCJxdWFudGl0eVwiOiR7dW5pdHNTb2xkfSxcInRpbWVcIjpcIiR7bm93LmZyb21IVFRQLnRvU3RyaW5nKCl9XCJ9YCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyByZXNldEVuZXJneURhdGFUb0RlZmF1bHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlcXVlc3QoYmFzZVVybCkucG9zdCgnL3Jlc2V0JylcclxuICAgICAgICAuc2VuZCgnJylcclxuICAgICAgICAuZXhwZWN0KDIwMCk7XHJcbiAgICB9O1xyXG59Il0sInZlcnNpb24iOjN9","originalCode":"import request from \"supertest\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // this is to bypass certification errors\r\n\r\nconst baseUrl = 'https://ensekapicandidatetest.azurewebsites.net/';\r\n\r\nexport class EnsekApiTestAppActions {\r\n\r\n    static async buyEnergy(energyId: number, quantity: number) {\r\n        const response = await request(baseUrl).put(`/buy/${energyId}/${quantity}`)\r\n        .expect(200);\r\n        //need body?\r\n    };\r\n    \r\n    static async checkEnergy(electricUnits: number = 4322, gasUnits: number = 3000, nuclearUnits: number = 0, oilUnits: number = 20) {\r\n        const response = await request(baseUrl).get('/energy');\r\n        expect(JSON.stringify(response.body)).toEqual((`{\"electric\":{\"energy_id\":3,\"price_per_unit\":0.47,\"quantity_of_units\":${electricUnits},\"unit_type\":\"kWh\"},\"gas\":{\"energy_id\":1,\"price_per_unit\":0.34,\"quantity_of_units\":${gasUnits},\"unit_type\":\"m³\"},\"nuclear\":{\"energy_id\":2,\"price_per_unit\":0.56,\"quantity_of_units\":${nuclearUnits},\"unit_type\":\"MW\"},\"oil\":{\"energy_id\":4,\"price_per_unit\":0.5,\"quantity_of_units\":${oilUnits},\"unit_type\":\"Litres\"}}`))       \r\n    };\r\n\r\n    static async login(username: string, password: string, expectedResponse: number) {\r\n        return await request(baseUrl).post(`/login`)\r\n        .send(JSON.parse(`{\"username\":\"${username}\",\"password\":\"${password}\"}`))\r\n        .expect(expectedResponse);\r\n    };\r\n\r\n    static async checkOrders(energyType: string, unitsSold: number) {\r\n        const now = DateTime;\r\n\r\n        const response =  await request(baseUrl).get(`/orders`);\r\n        expect(JSON.stringify(response.body)).toContain(`{\"fuel\":\"${energyType}\",\"id\":31fc32da-bccb-44ab-9352-4f43fc44ed4b\",\"quantity\":${unitsSold},\"time\":\"${now.fromHTTP.toString()}\"}`);\r\n    };\r\n\r\n    static async resetEnergyDataToDefault() {\r\n        return await request(baseUrl).post('/reset')\r\n        .send('')\r\n        .expect(200);\r\n    };\r\n}","sourceMapPath":"C:/Users/Darren/AppData/Local/Temp/jest/jest-transform-cache-640cf45b7291600be04a7cde20907db4-d1d5bfaad8659acd06069518d3e76e6c/42/ensekapitestappactions_42d1fc7d5c1b182ef9e09fc2505171ea.map","wrapperLength":89},"result":{"scriptId":"1811","url":"F:\\Projects\\ensek\\E2ETests\\test\\methods\\ensek-api-test-app.actions.ts","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7438,"count":1}],"isBlockCoverage":true},{"functionName":"Object.<anonymous>","ranges":[{"startOffset":23,"endOffset":7435,"count":1}],"isBlockCoverage":true},{"functionName":"buyEnergy","ranges":[{"startOffset":542,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"checkEnergy","ranges":[{"startOffset":751,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"login","ranges":[{"startOffset":1403,"endOffset":1654,"count":3}],"isBlockCoverage":true},{"functionName":"checkOrders","ranges":[{"startOffset":1672,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"resetEnergyDataToDefault","ranges":[{"startOffset":2045,"endOffset":2203,"count":0}],"isBlockCoverage":false}]}}]}],"wasInterrupted":false,"config":{"bail":0,"changedFilesWithAncestor":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"F:\\Projects\\ensek\\E2ETests\\reports\\coverage\\v8","coverageProvider":"v8","coverageReporters":["html-spa"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"passWithNoTests":true,"projects":[],"reporters":[["default",{}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-junit\\index.js",{"suiteName":"MICA 4 E2E Tests","outputDirectory":"reports/jest-junit","outputName":"Jest Results - 08-08-2022 02.43.xml","suiteNameTemplate":"{title}","classNameTemplate":"{classname}-{title}","titleTemplate":"{classname}-{title}","ancestorSeparator":" › ","includeShortConsoleOutput":true}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-html-reporter\\dist\\index.js",{"pageTitle":"MICA 4 E2E Test Report","includeFailureMsg":true,"includeConsoleLog":true,"outputPath":"reports/jest-basic/Basic Report - 08-08-2022 02.43.html"}],["F:\\Projects\\ensek\\E2ETests\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"reports/jest-html","filename":"jest-report - 08-08-2022 02.43.html","pageTitle":"Test Report","expand":false,"customInfos":[{"title":"MICA 4"}],"includeConsoleLog":true}]],"rootDir":"F:\\Projects\\ensek\\E2ETests","runTestsByPath":false,"skipFilter":false,"testFailureExitCode":1,"testPathPattern":"","testSequencer":"F:\\Projects\\ensek\\E2ETests\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":50000,"updateSnapshot":"new","useStderr":false,"verbose":false,"watch":false,"watchAll":true,"watchman":true},"endTime":1659967031552,"_reporterOptions":{"publicPath":"reports/jest-html","filename":"jest-report - 08-08-2022 02.43.html","expand":false,"pageTitle":"Test Report","hideIcon":false,"customInfos":[{"title":"MICA 4"}],"testCommand":"npx jest","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","includeConsoleLog":true},"attachInfos":{}})